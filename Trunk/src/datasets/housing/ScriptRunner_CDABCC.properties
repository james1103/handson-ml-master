[CDABCC]
cdabcc.sql.fcsales01:
  /*delete data that may exist in the table*/
  DELETE FROM loyalty_bi_analytics.fact_campaign_sales_solus
  --WHERE campaign_code = 'WRC0018_V2' AND campaign_start_date = '2016-04-04 00:00:00' AND    campaign_week_nbr = 1
  WHERE campaign_code = %s AND campaign_start_date = %s AND    campaign_week_nbr = %s


cdabcc.sql.fcsales02:
  INSERT INTO loyalty_bi_analytics.fact_campaign_sales_solus
  (
  campaign_code	,
  campaign_name	,
  campaign_start_date	,
  offer_start_date	,
  offer_end_date	,
  crn	,
  campaign_desc	,
  campaign_objective	,
  campaign_duration	,
  campaign_week_nbr	,
  campaign_audience_type	,
  cvm_segment	,
  lifestyle	,
  affluence	,
  send_flag	,
  bounce_flag	,
  deliver_flag	,
  click_flag	,
  open_flag	,
  activate_flag	,
  redeem_flag	,
  basket_count_promo       ,
  basket_count_post        ,
  basket_count_L4W         ,
  basket_count_L8W         ,
  basket_count_SPLY        ,
                           
  TPG_basket_count_promo   ,
  TPG_basket_count_post    ,
  TPG_basket_count_L4W     ,
  TPG_basket_count_L8W     ,
  TPG_basket_count_SPLY    ,
                           
                           
  TPG_basket_count_post_1w ,
  TPG_basket_count_post_2w ,
  TPG_basket_count_post_3w ,
  TPG_basket_count_post_4w ,
  TPG_basket_count_post_5w ,
  TPG_basket_count_post_6w ,
  TPG_basket_count_post_7w ,
  TPG_basket_count_post_8w ,
  TPG_basket_count_post_9w ,
  TPG_basket_count_post_10w,
  TPG_basket_count_post_11w,
  TPG_basket_count_post_12w,
                           
  TPG_basket_count_pre_1W  ,
  TPG_basket_count_pre_2W  ,
  TPG_basket_count_pre_3W  ,
  TPG_basket_count_pre_4W  ,
  TPG_basket_count_pre_5W  ,
  TPG_basket_count_pre_6W  ,
  TPG_basket_count_pre_7W  ,
  TPG_basket_count_pre_8W  ,
  
  max_number_of_products_redeemed	,
  basket_count ,
  total_times_redeem_count	,
  tot_amt_incld_gst_promo	,
  tot_amt_excld_gst_promo	,
  tot_amt_incld_gst_l4w	,
  tot_amt_excld_gst_l4w	,
  tot_amt_incld_gst_l8w	,
  tot_amt_excld_gst_l8w	,
  tot_amt_incld_gst_post	,
  tot_amt_excld_gst_post	,
  tot_amt_incld_gst_sply	,
  tot_amt_excld_gst_sply	,
  tot_amt_incld_gst_l4wly	,
  tot_amt_excld_gst_l4wly	,
  tot_amt_excld_gst_pre1	,
  tot_amt_excld_gst_pre2	,
  tot_amt_excld_gst_pre3	,
  tot_amt_excld_gst_pre4	,
  tot_amt_excld_gst_pre5	,
  tot_amt_excld_gst_pre6	,
  tot_amt_excld_gst_pre7	,
  tot_amt_excld_gst_pre8	,
  tot_amt_excld_gst_post1	,
  tot_amt_excld_gst_post2	,
  tot_amt_excld_gst_post3	,
  tot_amt_excld_gst_post4	,
  tot_amt_excld_gst_post5	,
  tot_amt_excld_gst_post6	,
  tot_amt_excld_gst_post7	,
  tot_amt_excld_gst_post8	,
  tot_amt_excld_gst_post9	,
  tot_amt_excld_gst_post10	,
  tot_amt_excld_gst_post11	,
  tot_amt_excld_gst_post12	,
  TPG_tot_amt_incld_gst_promo ,
  TPG_tot_amt_excld_gst_promo ,
  TPG_tot_amt_incld_gst_l4w   ,
  TPG_tot_amt_excld_gst_l4w   ,        
  TPG_tot_amt_incld_gst_l8w   ,
  TPG_tot_amt_excld_gst_l8w   ,           
  TPG_tot_amt_incld_gst_post  ,
  TPG_tot_amt_excld_gst_post  ,                     
  TPG_tot_amt_incld_gst_sply  ,
  TPG_tot_amt_excld_gst_sply  ,                     
  TPG_tot_amt_incld_gst_l4wly ,
  TPG_tot_amt_excld_gst_l4wly ,   
  reward_val	,
  comm_count	,
  unsub_flag	,
  qff_status	,
  age_group	,
  state	,
  tenure_bucket	,
  docket_comm_count	,
  dm_comm_count	,
  sms_comm_count ,
  number_offers
  
  )
  
  with PARAM AS
  (
    /*
    campaign details are provided here
    - campaign code, name, type, period, desc, objective, duration, post campaign duration
    - week number, start end date, email start end date
    - fundamental fields from DC tables: campaign_start_date, offer_exec_start_date, control_start, cvm_pw_end_date
    */
    
  
    SELECT 
      campaign_code
      , campaign_name
      , campaign_type
      , period_description
      , week_nbr
      , week_promo_start
      , week_promo_end
      , week_email_start
      , week_email_end
      , campaign_start_date
      , offer_exec_start_date
      , control_start
      , first_offer_start_date
      , campaign_desc
      , campaign_objective
      , campaign_duration
      , campaign_duration_weeks
      , case when getDate() < first_offer_start_date + (campaign_duration_weeks + post_campaign_weeks) * 7 - 1 then 0 else  post_campaign_weeks end as post_campaign_weeks
      , cvm_pw_end_date
      , cmpgn_exec_id
      FROM loyalty_bi_analytics.dim_campaign
      ----WHERE campaign_code = 'OSP-0005' AND campaign_start_date = '2016-12-16 00:00:00' and week_nbr = 2
      WHERE campaign_code = %s AND campaign_start_date = %s and week_nbr = %s
  )
  ,
  target AS
  (
    /*
    list of crns in target group, together with
    - cvm segment
    - affluence
    - life stage
    - offer number of these crns of the week being processed
    */
    
    select distinct tclist.crn::varchar, null as offer_id 
    ,cvm.macro_segment_curr as cvm_segment
    ,coalesce(NULLIF(ltrim(rtrim(upper(cvm.affluence))),''),'UNKNOWN') AS affluence
    ,coalesce(NULLIF(ltrim(rtrim(upper(cvm.lifestage))),''),'UNKNOWN') AS lifestage
    ,coalesce(NULLIF(ltrim(rtrim(upper(cvm.qff_status))),''),'UNKNOWN') AS qff_status
    ,coalesce(NULLIF(ltrim(rtrim(upper(cal.age_group))),''),'UNKNOWN') AS age_group
    ,coalesce(NULLIF(ltrim(rtrim(upper(s.district_name))),''),'UNKNOWN') AS state
    ,coalesce(NULLIF(ltrim(rtrim(upper(tl.bucket))),''),'UNKNOWN') AS tenure_bucket
  
    from  loyalty.et_resp_sendlog a
    CROSS JOIN PARAM
    
    JOIN   loyalty.et_resp_sent b
    ON     a.send_id = b.send_id
    AND    a.subscriber_id = b.subscriber_id
    JOIN   loyalty.targeted_customer_list tclist
    ON     a.subscriber_key = tclist.crn
  
    LEFT OUTER 
    JOIN    loyalty.customer_value_model cvm
    ON      tclist.crn = cvm.crn
    AND     cvm.pw_end_date = PARAM.cvm_pw_end_date
    left join loyalty.location s 
    on s.store_nbr = cvm.preferred_store
    and s.division_nbr in ('1005','1030')
    
    left join dim_cust c
    on      tclist.crn = c.crn
    
    left join loyalty_bi_analytics.ca_customer_age_lookup  cal
    on      c.age between cal.start_age and cal.end_age
    
    left join
    --to get earliest card
    (
      select crn
          , lylty_card_actv_date
          , row_number() over (partition by crn order by lylty_card_actv_date) as row
      from loyalty.lylty_card_detail
      where crn <> '0'
    ) as tenure
    on tclist.crn = tenure.crn
    and tenure.row = 1
  
    --to get tenure bucket
    left join loyalty_bi_analytics.ca_customer_tenure_lookup tl
    on datediff('year', tenure.lylty_card_actv_date, current_date) >= startt and datediff('year', tenure.lylty_card_actv_date, current_date) < endt
    
    WHERE  a.campaign_code = PARAM.campaign_code
    AND    a.test_send IN (0,'N','F')
    AND    tclist.cmpgn_exec_id=PARAM.cmpgn_exec_id
    AND a.offer_exec_Start_date = param.campaign_start_date
  )
  
  ,
  control AS
  (
    /*
    list of crns in control group, together with
    - cvm segment
    - affluence
    - life stage
    - offer number of these crns of the week being processed
    */
    SELECT distinct cg.crn::varchar
    ,null as offer_id
    ,cg.control_macro_segmnt_id AS cvm_segment
    ,coalesce(NULLIF(ltrim(rtrim(upper(cvm.affluence))),''),'UNKNOWN') AS affluence
    ,coalesce(NULLIF(ltrim(rtrim(upper(cvm.lifestage))),''),'UNKNOWN') AS lifestage
    ,coalesce(NULLIF(ltrim(rtrim(upper(cvm.qff_status))),''),'UNKNOWN') AS qff_status
    ,coalesce(NULLIF(ltrim(rtrim(upper(cal.age_group))),''),'UNKNOWN') AS age_group
    ,coalesce(NULLIF(ltrim(rtrim(upper(s.district_name))),''),'UNKNOWN') AS state
    ,coalesce(NULLIF(ltrim(rtrim(upper(tl.bucket))),''),'UNKNOWN') AS tenure_bucket
    
    FROM   PARAM p
    INNER
    JOIN   loyalty.control_group cg
    ON     p.campaign_code          = cg.campaign_code
    AND    cg.control_start_date    = p.control_start
    --AND    cg.offer_exec_start_date = p.week_promo_start    
    LEFT OUTER 
    JOIN  loyalty.customer_value_model cvm
    ON 	  cvm.crn = cg.crn
    AND   cvm.pw_end_date = p.cvm_pw_end_date
    
    left join loyalty.location s 
    on s.store_nbr = cvm.preferred_store
    and s.division_nbr in ('1005','1030')
    
    left join dim_cust c
    on      cg.crn = c.crn
    
    left join loyalty_bi_analytics.ca_customer_age_lookup  cal
    on      c.age between cal.start_age and cal.end_age
    
    left join
    --to get earliest card
    (
      select crn
          , lylty_card_actv_date
          , row_number() over (partition by crn order by lylty_card_actv_date) as row
      from loyalty.lylty_card_detail
      where crn <> '0'
    ) as tenure
    on cg.crn = tenure.crn
    and tenure.row = 1
  
    --to get tenure bucket
    left join loyalty_bi_analytics.ca_customer_tenure_lookup tl
    on datediff('year', tenure.lylty_card_actv_date, current_date) >= startt and datediff('year', tenure.lylty_card_actv_date, current_date) < endt    
    
  )
  , p_redeemed AS
  (
      /*
      TPG of the campaign
      */
      select crn, product_id_uom as prod_nbr
      From   loyalty.customer_virtual_offer_outbound_hist
      INNER JOIN PARAM
      ON     send_date = PARAM.offer_exec_start_date
  )  
  ,
  audience AS
  (
    /*
    combine target and control group
    */
    
    SELECT 'T' AS grp, crn, offer_id, cvm_segment, affluence, lifestage, qff_status, age_group, state, tenure_bucket
    FROM target
    UNION ALL
    SELECT 'C' AS grp, crn, offer_id, cvm_segment, affluence, lifestage, qff_status, age_group, state, tenure_bucket
    FROM control
  )
  
  ,
  offer_given as
  (
  select crn, count(distinct offer_id) as number_offers 
  from loyalty.targeted_customer_list tclist 
  inner join param
  on tclist.cmpgn_exec_id = param.cmpgn_exec_id
  where offer_type = 901
  group by 1
  )
  ,
  sent AS
  (
    /*
    recipient list of crns for emails sent in the week being processed
    */
    SELECT DISTINCT a.subscriber_key AS crn, count(1) as email_comm
    FROM   PARAM p
    INNER
    JOIN   loyalty.et_resp_sendlog a
    ON     p.campaign_code = a.campaign_code
    and    a.offer_exec_Start_date = p.campaign_start_date --Hari Add
    AND    a.test_send IN (0,'N','F')
    JOIN   loyalty.et_resp_sent b
    ON     a.send_id = b.send_id
    AND    a.subscriber_id = b.subscriber_id
    JOIN   target
    ON     a.subscriber_key = target.crn
    WHERE  date_trunc('day', dateadd('hour',6,CONVERT_TIMEZONE('Australia/Sydney',b.event_date))) BETWEEN p.week_email_start AND p.week_email_end
  
    group by 1
  )
  , 
  opened AS
  (
    /*
    distinct crns who opened email in the week being processed
    */
    SELECT DISTINCT a.subscriber_key AS crn
    FROM   PARAM p
    INNER
    JOIN   loyalty.et_resp_sendlog a
    ON     p.campaign_code = a.campaign_code
    and a.offer_exec_Start_date = p.campaign_start_date  --hari add
    AND    a.test_send IN (0,'N','F')
    JOIN   loyalty.et_resp_open b
    ON     a.send_id = b.send_id
    AND    a.subscriber_id = b.subscriber_id
    JOIN   target
    ON     a.subscriber_key = target.crn
    WHERE  date_trunc('day', dateadd('hour',6,CONVERT_TIMEZONE('Australia/Sydney',b.event_date))) BETWEEN p.week_email_start AND p.week_email_end
  
  )
  ,
  activated AS
  (
    /*
    distinct crns who activated email in the week being processed
    */
  
    SELECT DISTINCT coa.crn
    FROM   PARAM p
    INNER
    JOIN   loyalty.campaign_exec ce --campaign and execution level table
    on     ce.cmpgn_code = P.campaign_code
    and    ce.cmpgn_exec_id = P.cmpgn_exec_id
    INNER
    JOIN   loyalty.campaign_exec_cust_offer_allocation coa --offer table for both target and control (get activations)
    ON     coa.cmpgn_exec_id=ce.cmpgn_exec_id
    AND    coa.activation_ts IS NOT NULL
    AND    date_trunc('day', CONVERT_TIMEZONE('Australia/Sydney',coa.activation_ts)) BETWEEN p.week_email_start AND p.week_promo_end
  )
  
  ,
  redeemed AS
  (
    /*
    distinct crns who redeemed in the week being processed
    */
  
    
    select distinct ctc.crn as CRN, sum(reward_credit_amt/offer_reward) as redeem_times, count(*) as max_number_of_products_redeemed
    ,sum(CASE WHEN ctc.gst_pct = 0
            THEN ctc.reward_amt
            else ctc.reward_amt/(1+(ctc.gst_pct/100))
            END) AS cost
    , count(distinct basket_key) as basket_count
  
    From   loyalty.campaign_exec_reward ctc
    inner 
    join   loyalty.campaign_exec_cust_offer_allocation cecoa
    on     ctc.crn=cecoa.crn
    and    ctc.cmpgn_exec_id=cecoa.cmpgn_exec_id
    and    ctc.offer_nbr=cecoa.offer_id
    inner join PARAM p
    on     ctc.cmpgn_exec_id=p.cmpgn_exec_id
    and    trunc(start_txn_time) between p.week_promo_start and p.week_promo_end
    --and    cecoa.offer_status in ('Reached','Rdmp Limit Rchd','Credit Pending','Credited')
    where ctc.reward_credit_status <> 'Credit Failed'
    group by 1
  )
  ,
  bounced AS
  (
    /*
    list of crns got email bounced
    */	
    SELECT DISTINCT a.subscriber_key AS crn
    FROM   PARAM p
    INNER
    JOIN   loyalty.et_resp_sendlog a
    ON     p.campaign_code = a.campaign_code
  and a.offer_exec_Start_date = p.campaign_start_date  --hari add
    AND    a.test_send IN (0,'N','F')
    JOIN   loyalty.et_resp_bounces b
    ON     a.send_id = b.send_id
    AND    a.subscriber_id = b.subscriber_id
    JOIN   target
    ON     a.subscriber_key = target.crn
    WHERE  date_trunc('day', dateadd('hour',6,CONVERT_TIMEZONE('Australia/Sydney',b.event_date))) BETWEEN p.week_email_start AND p.week_email_end
  )
  ,
  unsub AS
  (
    /*
    list of crns got email bounced
    */	
    SELECT DISTINCT a.subscriber_key AS crn
    FROM   PARAM p
    INNER
    JOIN   loyalty.et_resp_sendlog a
    ON     p.campaign_code = a.campaign_code
    and a.offer_exec_Start_date = p.campaign_start_date  --hari add
    AND    a.test_send IN (0,'N','F')
    JOIN   loyalty.et_resp_unsubs b
    ON     a.send_id = b.send_id
    AND    a.subscriber_id = b.subscriber_id
    JOIN   target
    ON     a.subscriber_key = target.crn
    WHERE  date_trunc('day', dateadd('hour',6,CONVERT_TIMEZONE('Australia/Sydney',b.event_date))) BETWEEN p.week_email_start AND p.week_email_end
  )  
  
  ,
  clicked AS
  (
    /*
    list of crns clicked on email's link
    */	
    SELECT DISTINCT a.subscriber_key AS crn
    FROM   PARAM p
    INNER
    JOIN   loyalty.et_resp_sendlog a
    ON     p.campaign_code = a.campaign_code
    and a.offer_exec_Start_date = p.campaign_start_date  --hari add
    AND    a.test_send IN (0,'N','F')
    JOIN   loyalty.et_resp_clicks b
    ON     a.send_id = b.send_id
    AND    a.subscriber_id = b.subscriber_id
    JOIN   target
    ON     a.subscriber_key = target.crn
    WHERE  date_trunc('day', dateadd('hour',6,CONVERT_TIMEZONE('Australia/Sydney',b.event_date))) BETWEEN p.week_email_start AND p.week_email_end
  
  )
  
  ,
  sms as
  (
  
    select distinct crn, count(1) as sms_comm
    from  PARAM p
    INNER
    JOIN   loyalty.targeted_customer_list tclist
    on     p.cmpgn_exec_id = tclist.cmpgn_exec_id
    inner
    join   loyalty.targeted_customer_list_channel tclc
    on     tclist.targeted_customer_list_id=tclc.targeted_customer_list_id
    where  upper(communication_channel) = 'SMS'
    and    date_trunc('day', dateadd('hour',6,CONVERT_TIMEZONE('Australia/Sydney',tclc.insert_date))) BETWEEN p.week_email_start AND p.week_email_end 
    group by 1
  ),
  docket as
  (
  
    select distinct crn, count(1) as docket_comm
    from  PARAM p
    INNER
    JOIN   loyalty.targeted_customer_list tclist
    on     p.cmpgn_exec_id = tclist.cmpgn_exec_id
    inner
    join   loyalty.targeted_customer_list_channel tclc
    on     tclist.targeted_customer_list_id=tclc.targeted_customer_list_id
    where  upper(communication_channel) = 'DOC'
    and    date_trunc('day', dateadd('hour',6,CONVERT_TIMEZONE('Australia/Sydney',tclc.insert_date))) BETWEEN p.week_email_start AND p.week_email_end 
    group by 1
    
  )  
  ,
  TPG_sales AS
  (
    SELECT c.crn
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.week_promo_start AND PARAM.week_promo_end THEN ass.basket_key else NULL END)
    AS TPG_basket_count_promo
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) 
                   AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + post_campaign_weeks) - 1 THEN
                   ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_post  
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) 
                   AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 1) - 1 THEN
                   ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_post_1w   
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 1) 
                   AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 2) - 1 THEN
                   ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_post_2w   

    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 2) 
                   AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 3) - 1 THEN
                   ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_post_3w   
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 3) 
                   AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 4) - 1 THEN
                   ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_post_4w   
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 4) 
                   AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 5) - 1 THEN
                   ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_post_5w 

    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 5) 
                   AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 6) - 1 THEN
                   ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_post_6w 
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 6) 
                   AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 7) - 1 THEN
                   ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_post_7w 

    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 7) 
                   AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 8) - 1 THEN
                   ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_post_8w 

    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 8) 
                   AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 9) - 1 THEN
                   ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_post_9w 

    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 9) 
                   AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 10) - 1 THEN
                   ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_post_10w  

    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 10) 
                   AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 11) - 1 THEN
                   ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_post_11w  

    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 11) 
                   AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + 12) - 1 THEN
                   ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_post_12w  


    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*4 AND PARAM.first_offer_start_date - 1 THEN ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_L4W
    
    
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*8 AND PARAM.first_offer_start_date - 1 THEN ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_L8W
    
    
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*1 AND PARAM.first_offer_start_date - 7*0 - 1 THEN ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_pre_1W
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*2 AND PARAM.first_offer_start_date - 7*1 - 1 THEN ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_pre_2W
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*3 AND PARAM.first_offer_start_date - 7*2 - 1 THEN ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_pre_3W
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*4 AND PARAM.first_offer_start_date - 7*3 - 1 THEN ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_pre_4W
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*5 AND PARAM.first_offer_start_date - 7*4 - 1 THEN ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_pre_5W
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*6 AND PARAM.first_offer_start_date - 7*5 - 1 THEN ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_pre_6W
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*7 AND PARAM.first_offer_start_date - 7*6 - 1 THEN ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_pre_7W
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*8 AND PARAM.first_offer_start_date - 7*7 - 1 THEN ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_pre_8W
    
    



    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 364
                   AND PARAM.first_offer_start_date + 7 * PARAM.campaign_duration_weeks - 1 - 364 THEN
                   ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS TPG_basket_count_sply
    
    , sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.week_promo_start AND PARAM.week_promo_end THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END) AS TPG_tot_amt_excld_gst_promo 
    , sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.week_promo_start AND PARAM.week_promo_end THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))
    else 0 END
    ) AS TPG_tot_amt_incld_gst_promo 
    
    , sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*4 AND PARAM.first_offer_start_date - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS TPG_tot_amt_excld_gst_l4w 
    , sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*4 AND PARAM.first_offer_start_date - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))
    else 0 END
    ) / campaign_duration_weeks
    AS TPG_tot_amt_incld_gst_l4w 
    
    , sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*8 AND PARAM.first_offer_start_date - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS TPG_tot_amt_excld_gst_l8w 
    , sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*8 AND PARAM.first_offer_start_date - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))
    else 0 END
    ) / campaign_duration_weeks
    AS TPG_tot_amt_incld_gst_l8w 
    
    , sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) 
                   AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + post_campaign_weeks) - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS TPG_tot_amt_excld_gst_post 
    , sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) 
                   AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + post_campaign_weeks) - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))
    else 0 END
    ) / campaign_duration_weeks
    AS TPG_tot_amt_incld_gst_post 

    , sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 4*7 - 364
                   AND PARAM.first_offer_start_date - 364 - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS TPG_tot_amt_excld_gst_l4wly 
    
    
    , sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 4*7 - 364
                   AND PARAM.first_offer_start_date - 364 - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))
    else 0 END
    ) / campaign_duration_weeks
    AS TPG_tot_amt_incld_gst_l4wly  


    , sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 364
                   AND PARAM.first_offer_start_date + 7 * PARAM.campaign_duration_weeks - 1 - 364 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS TPG_tot_amt_excld_gst_sply  
    
    
    , sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 364
                   AND PARAM.first_offer_start_date + 7 * PARAM.campaign_duration_weeks - 1 - 364  THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))
    else 0 END
    ) / campaign_duration_weeks
    AS TPG_tot_amt_incld_gst_sply   
    FROM   audience c
    INNER
    JOIN   loyalty.lylty_card_detail lcd
    ON     c.crn = lcd.crn
    INNER
    JOIN   loyalty.article_sales_summary ass
    ON     lcd.lylty_card_nbr = ass.lylty_card_nbr
    INNER
    JOIN   loyalty.article_master am
    ON     ass.prod_nbr=am.prod_nbr 
    AND    am.division_nbr=ass.division_nbr 
    AND    am.division_nbr IN (1005,1030)
    AND    am.dept_code<>20
    AND    ass.void_flag <> 'Y'
    INNER
    JOIN   p_redeemed pp
    ON     ass.prod_nbr = pp.prod_nbr
    AND    c.crn = pp.crn
    
    CROSS 
    JOIN   PARAM
    WHERE  (ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 8*7 
         AND    PARAM.first_offer_start_date + 7 * (campaign_duration_weeks + post_campaign_weeks) - 1)
         OR
         (ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 4*7 - 364
         AND    PARAM.first_offer_start_date + 7 * (campaign_duration_weeks) - 1 - 364)
    GROUP  BY c.crn, campaign_duration_weeks, week_promo_start, week_promo_end,post_campaign_weeks,first_offer_start_date
  )
  ,
  sales AS
  (
    /*
    sales data per crn - this is used to calculate average spend metrics
    syntax: amount exclude/include gst + period
    */
    SELECT c.crn
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.week_promo_start AND PARAM.week_promo_end THEN ass.basket_key else NULL END)
    AS basket_count_promo
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) 
                   AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + post_campaign_weeks) - 1 THEN
                   ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS basket_count_post  
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*4 AND PARAM.first_offer_start_date - 1 THEN ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS basket_count_L4W
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*8 AND PARAM.first_offer_start_date - 1 THEN ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS basket_count_L8W
    
    , count(
    DISTINCT CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 364
                   AND PARAM.first_offer_start_date + 7 * PARAM.campaign_duration_weeks - 1 - 364 THEN
                   ass.basket_key else NULL END)*1.000000 / campaign_duration_weeks
    AS basket_count_sply
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.week_promo_start AND PARAM.week_promo_end THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END) AS tot_amt_excld_gst_promo 
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.week_promo_start AND PARAM.week_promo_end THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))
    else 0 END
    ) AS tot_amt_incld_gst_promo 
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*4 AND PARAM.first_offer_start_date - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_l4w 
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*4 AND PARAM.first_offer_start_date - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_incld_gst_l4w 
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*8 AND PARAM.first_offer_start_date - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_l8w 
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*8 AND PARAM.first_offer_start_date - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_incld_gst_l8w 
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) 
                  AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + post_campaign_weeks) - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_post 
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) 
                  AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks + post_campaign_weeks) - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_incld_gst_post 
  
  
  
    /*l4wly used to calcualte index*/
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 4*7 - 364
                  AND PARAM.first_offer_start_date - 364 - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_l4wly 
    
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 4*7 - 364
                  AND PARAM.first_offer_start_date - 364 - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_incld_gst_l4wly  
  
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 364
                  AND PARAM.first_offer_start_date + 7 * PARAM.campaign_duration_weeks - 1 - 364 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_sply  
    
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 364
                  AND PARAM.first_offer_start_date + 7 * PARAM.campaign_duration_weeks - 1 - 364  THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_incld_gst_sply   
  
  
    /*
    week by week sales data used to sketch the average spend target vs control chart
    maximum post 12 weeks supported
    */
    --PRE
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*0 - 7 AND PARAM.first_offer_start_date - 7*0 - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_pre1
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*1 - 7 AND PARAM.first_offer_start_date - 7*1 - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_pre2	
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*2 - 7 AND PARAM.first_offer_start_date - 7*2 - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_pre3		
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*3 - 7 AND PARAM.first_offer_start_date - 7*3 - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_pre4
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*4 - 7 AND PARAM.first_offer_start_date - 7*4 - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_pre5
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*5 - 7 AND PARAM.first_offer_start_date - 7*5 - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_pre6
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*6 - 7 AND PARAM.first_offer_start_date - 7*6 - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_pre7
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 7*7 - 7 AND PARAM.first_offer_start_date - 7*7 - 1 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_pre8	
    --POST	
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*0
                  AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*0 + 6 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_post1	
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*1
                  AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*1 + 6 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_post2	
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*2
                  AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*2 + 6 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_post3	
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*3
                  AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*3 + 6 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_post4	
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*4
                  AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*4 + 6 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_post5
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*5
                  AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*5 + 6 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_post6	
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*6
                  AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*6 + 6 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_post7
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*7
                  AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*7 + 6 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_post8	
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*8
                  AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*8 + 6 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_post9	
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*9
                  AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*9 + 6 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_post10
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*10
                  AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*10 + 6 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_post11
    
    ,sum(
    CASE WHEN ass.start_txn_date BETWEEN PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*11
                  AND PARAM.first_offer_start_date + 7 * (PARAM.campaign_duration_weeks) + 7*11 + 6 THEN
    (ass.tot_amt_incld_gst-coalesce(ass.tot_wow_dollar_incld_gst,0))/(1+(ass.gst_pct)/100)
    else 0 END
    ) / campaign_duration_weeks
    AS tot_amt_excld_gst_post12	
    
  
    FROM   audience c
    INNER
    JOIN   loyalty.lylty_card_detail lcd
    ON     c.crn = lcd.crn
    INNER
    JOIN   loyalty.article_sales_summary ass
    ON     lcd.lylty_card_nbr = ass.lylty_card_nbr
    INNER
    JOIN   loyalty.article_master am
    ON     ass.prod_nbr=am.prod_nbr 
    AND    am.division_nbr=ass.division_nbr 
    AND    am.division_nbr IN (1005,1030)
    AND    am.dept_code<>20
    AND    ass.void_flag <> 'Y'
    CROSS 
    JOIN   PARAM
    /*cover sales data up to 8 weeks before campaign start data and up to x weeks post campaign*/
    WHERE  (ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 8*7 
        AND    PARAM.first_offer_start_date + 7 * (campaign_duration_weeks + post_campaign_weeks) - 1)
        OR
        /*cover sales data 4 weeks before SPLY and SPLY*/
        (ass.start_txn_date BETWEEN PARAM.first_offer_start_date - 4*7 - 364
        AND    PARAM.first_offer_start_date + 7 * (campaign_duration_weeks) - 1 - 364)
    GROUP  BY c.crn, campaign_duration_weeks, week_promo_start, week_promo_end,post_campaign_weeks,first_offer_start_date 
    
  )
  SELECT  p.campaign_code
      ,p.campaign_name || ' ' || p.period_description AS campaign_name
      ,p.campaign_start_date
  
      ,p.week_promo_start AS offer_start_date
      ,p.week_promo_end AS offer_end_date
  
      ,t.crn
      ,p.campaign_desc
      ,p.campaign_objective
      ,p.campaign_duration 
      ,p.week_nbr AS campaign_week_nbr
      ,t.grp AS campaign_audience_type
  
      ,t.cvm_segment
      ,t.lifestage
      ,t.affluence
  
      ,s.crn AS send_flag
      ,b.crn AS bounce_flag
      ,CASE WHEN b.crn IS NULL THEN s.crn else NULL END AS deliver_flag
      ,c.crn AS click_flag
      ,op.crn AS open_flag
      ,a.crn AS activate_flag
      ,r.crn AS redeem_flag
      
      , basket_count_promo
      , basket_count_post
      , basket_count_L4W
      , basket_count_L8W
      , basket_count_SPLY
      
      , TPG_basket_count_promo
      , TPG_basket_count_post
      , TPG_basket_count_L4W
      , TPG_basket_count_L8W
      , TPG_basket_count_SPLY 

      , TPG_basket_count_post_1w  
      , TPG_basket_count_post_2w  
      , TPG_basket_count_post_3w  
      , TPG_basket_count_post_4w  
      , TPG_basket_count_post_5w  
      , TPG_basket_count_post_6w  
      , TPG_basket_count_post_7w  
      , TPG_basket_count_post_8w  
      , TPG_basket_count_post_9w  
      , TPG_basket_count_post_10w 
      , TPG_basket_count_post_11w 
      , TPG_basket_count_post_12w 
                           
      , TPG_basket_count_pre_1W  
      , TPG_basket_count_pre_2W  
      , TPG_basket_count_pre_3W  
      , TPG_basket_count_pre_4W  
      , TPG_basket_count_pre_5W  
      , TPG_basket_count_pre_6W  
      , TPG_basket_count_pre_7W  
      , TPG_basket_count_pre_8W  
      
      ,coalesce(r.max_number_of_products_redeemed,0) as max_number_of_products_redeemed
      ,coalesce(r.basket_count ,0) AS basket_count 
      ,coalesce(r.redeem_times ,0) AS redeem_times 
      
      ,coalesce(tot_amt_incld_gst_promo ,0) AS tot_amt_incld_gst_promo 
      ,coalesce(tot_amt_excld_gst_promo ,0) AS tot_amt_excld_gst_promo 
  
      ,coalesce(tot_amt_incld_gst_l4w ,0) AS tot_amt_incld_gst_l4w 
      ,coalesce(tot_amt_excld_gst_l4w ,0) AS tot_amt_excld_gst_l4w 
  
      ,coalesce(tot_amt_incld_gst_l8w ,0) AS tot_amt_incld_gst_l8w 
      ,coalesce(tot_amt_excld_gst_l8w ,0) AS tot_amt_excld_gst_l8w 
  
      ,coalesce(tot_amt_incld_gst_post ,0) AS tot_amt_incld_gst_post 
      ,coalesce(tot_amt_excld_gst_post ,0) AS tot_amt_excld_gst_post 
  
      ,coalesce(tot_amt_incld_gst_sply ,0) AS tot_amt_incld_gst_sply 
      ,coalesce(tot_amt_excld_gst_sply ,0) AS tot_amt_excld_gst_sply 
  
      ,coalesce(tot_amt_incld_gst_l4wly ,0) AS tot_amt_incld_gst_l4wly 
      ,coalesce(tot_amt_excld_gst_l4wly ,0) AS tot_amt_excld_gst_l4wly 
      
      
      ,coalesce(tot_amt_excld_gst_pre1 ,0) AS tot_amt_excld_gst_pre1 
      ,coalesce(tot_amt_excld_gst_pre2 ,0) AS tot_amt_excld_gst_pre2
      ,coalesce(tot_amt_excld_gst_pre3 ,0) AS tot_amt_excld_gst_pre3 
      ,coalesce(tot_amt_excld_gst_pre4 ,0) AS tot_amt_excld_gst_pre4 
      ,coalesce(tot_amt_excld_gst_pre5 ,0) AS tot_amt_excld_gst_pre5 
      ,coalesce(tot_amt_excld_gst_pre6 ,0) AS tot_amt_excld_gst_pre6 
      ,coalesce(tot_amt_excld_gst_pre7 ,0) AS tot_amt_excld_gst_pre7 
      ,coalesce(tot_amt_excld_gst_pre8 ,0) AS tot_amt_excld_gst_pre8 
      
      ,coalesce(tot_amt_excld_gst_post1 ,0) AS tot_amt_excld_gst_post1 
      ,coalesce(tot_amt_excld_gst_post2 ,0) AS tot_amt_excld_gst_post2
      ,coalesce(tot_amt_excld_gst_post3 ,0) AS tot_amt_excld_gst_post3 
      ,coalesce(tot_amt_excld_gst_post4 ,0) AS tot_amt_excld_gst_post4 
      ,coalesce(tot_amt_excld_gst_post5 ,0) AS tot_amt_excld_gst_post5 
      ,coalesce(tot_amt_excld_gst_post6 ,0) AS tot_amt_excld_gst_post6 
      ,coalesce(tot_amt_excld_gst_post7 ,0) AS tot_amt_excld_gst_post7 
      ,coalesce(tot_amt_excld_gst_post8 ,0) AS tot_amt_excld_gst_post8 		
      ,coalesce(tot_amt_excld_gst_post9 ,0) AS tot_amt_excld_gst_post9 
      ,coalesce(tot_amt_excld_gst_post10 ,0) AS tot_amt_excld_gst_post10 
      ,coalesce(tot_amt_excld_gst_post11 ,0) AS tot_amt_excld_gst_post11 
      ,coalesce(tot_amt_excld_gst_post12 ,0) AS tot_amt_excld_gst_post12 		
      
      , TPG_tot_amt_incld_gst_promo
      , TPG_tot_amt_excld_gst_promo
      , TPG_tot_amt_incld_gst_l4w
      , TPG_tot_amt_excld_gst_l4w          
      , TPG_tot_amt_incld_gst_l8w
      , TPG_tot_amt_excld_gst_l8w             
      , TPG_tot_amt_incld_gst_post
      , TPG_tot_amt_excld_gst_post                      
      , TPG_tot_amt_incld_gst_sply
      , TPG_tot_amt_excld_gst_sply                      
      , TPG_tot_amt_incld_gst_l4wly
      , TPG_tot_amt_excld_gst_l4wly 
  
      ,coalesce(R.cost,0) AS reward_val 
      ,email_comm as comm_count
      ,unsub.crn as unsub_flag
      ,t.qff_status
      ,t.age_group
      ,t.state
      ,t.tenure_bucket
      
      ,docket.docket_comm as docket_comm_count
      ,null as dm_comm_count
      ,sms.sms_comm as sms_comm_count
      ,og.number_offers
  
  
  FROM   audience t
  LEFT
  JOIN   sent s
  ON     t.crn = s.crn
  LEFT
  JOIN   opened op
  ON     t.crn = op.crn
  LEFT
  JOIN   activated a
  ON     t.crn = a.crn
  LEFT
  JOIN   redeemed r
  ON     t.crn = r.crn
  LEFT
  JOIN   bounced b
  ON     t.crn = b.crn
  LEFT
  JOIN   clicked c
  ON     t.crn = c.crn
  CROSS
  JOIN   PARAM p
  LEFT
  JOIN   sales
  ON 	   t.crn = sales.crn
  LEFT
  JOIN   sms
  ON     t.crn = sms.crn
  LEFT
  JOIN   docket
  ON     t.crn = docket.crn
  LEFT
  JOIN   unsub
  ON     t.crn = unsub.crn  
  LEFT 
  JOIN   offer_given og
  on     T.crn = og.crn
  LEFT JOIN tpg_sales ts
  ON a.crn = ts.crn  


cdabcc.sql.fcsummary01:
  /*clean up temp table*/
  DELETE FROM loyalty_bi_analytics.fact_campaign_temp_BCC_CDA

cdabcc.sql.fcsummary02:
  /*populate temp table*/
  INSERT INTO loyalty_bi_analytics.fact_campaign_temp_BCC_CDA
  (campaign_code, campaign_name, campaign_start_date, target_count, control_count, total_send, total_bounce, total_deliver, total_click, total_open, total_activate, total_redeem, total_cost, shopper_count, total_member_redeem_send, total_member_redeem_open, total_basket_redeem_send, total_basket_redeem_open, total_item_redeem_send, total_item_redeem_open, redeem_1_count, redeem_2_count, redeem_3_count, redeem_4_count, redeem_5_count, redeem_6_count, redeem_7_count, redeem_8_count, redeem_9_count, promo_avg_target_spend, promo_avg_open_spend, promo_avg_activate_spend, promo_avg_redeem_send_spend, promo_avg_redeem_open_spend, promo_avg_control_spend, l4w_avg_target_spend, l4w_avg_open_spend, l4w_avg_activate_spend, l4w_avg_redeem_send_spend, l4w_avg_redeem_open_spend, l4w_avg_control_spend, l8w_avg_target_spend, l8w_avg_open_spend, l8w_avg_activate_spend, l8w_avg_redeem_send_spend, l8w_avg_redeem_open_spend, l8w_avg_control_spend, post_avg_target_spend, post_avg_open_spend, post_avg_activate_spend, post_avg_redeem_send_spend, post_avg_redeem_open_spend, post_avg_control_spend, sply_avg_target_spend, sply_avg_open_spend, sply_avg_activate_spend, sply_avg_redeem_send_spend, sply_avg_redeem_open_spend, sply_avg_control_spend, new_to_tpg, repeat_to_tpg_promo, repeat_to_tpg_post, basket_count_promo, basket_count_post, basket_count_l4w, basket_count_l8w, basket_count_sply, tpg_basket_count_promo, tpg_basket_count_post, tpg_basket_count_l4w, tpg_basket_count_l8w, tpg_basket_count_sply, tpg_promo_avg_target_spend, tpg_promo_avg_open_spend, tpg_promo_avg_activate_spend, tpg_promo_avg_redeem_send_spend, tpg_promo_avg_redeem_open_spend, tpg_promo_avg_control_spend, tpg_post_avg_target_spend, tpg_post_avg_open_spend, tpg_post_avg_activate_spend, tpg_post_avg_redeem_send_spend, tpg_post_avg_redeem_open_spend, tpg_post_avg_control_spend, tpg_l4w_avg_target_spend, tpg_l4w_avg_open_spend, tpg_l4w_avg_activate_spend, tpg_l4w_avg_redeem_send_spend, tpg_l4w_avg_redeem_open_spend, tpg_l4w_avg_control_spend, tpg_l8w_avg_target_spend, tpg_l8w_avg_open_spend, tpg_l8w_avg_activate_spend, tpg_l8w_avg_redeem_send_spend, tpg_l8w_avg_redeem_open_spend, tpg_l8w_avg_control_spend, member_shopped_tpg_promo, member_shopped_tpg_post, member_shopped_tpg_l4w, member_shopped_tpg_l8w, member_spend_tpg_promo, member_spend_tpg_post, member_spend_tpg_l4w, member_spend_tpg_l8w, no_weeks, post_campaign_weeks, period_description, period_sort_order,total_unsub, Val_Unsub_Rate, campaign_week_nbr)
  With 
  params AS
  (
    SELECT DISTINCT campaign_name || ' ' || period_description AS campaign_name
      , period_description AS period_description
      , cast(to_char(first_offer_start_date, 'YYYYMM') AS int) AS Period_Sort_Order
      , case when getDate() < first_offer_start_date + (campaign_duration_weeks + post_campaign_weeks) * 7 - 1 then 0 else  post_campaign_weeks end as post_campaign_weeks
      , campaign_duration_weeks AS no_weeks
    FROM loyalty_bi_analytics.dim_campaign
    --WHERE campaign_code = 'OSP-0005' AND campaign_start_date = '2016-12-16 00:00:00' 
    WHERE campaign_code = %s AND campaign_start_date = %s
  
  )
  
  SELECT * 
  FROM
  (
    /*
    First part of the script - populate week by week
    */
  
    SELECT 
    fcs.Campaign_Code
    , fcs.Campaign_Name
    , fcs.Campaign_Start_Date
    , Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END) Target_Count
    , Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END) Control_Count
    , Count(DISTINCT fcs.send_Flag) Total_Send
    , Count(DISTINCT fcs.Bounce_Flag) Total_Bounce
    --, Count(DISTINCT fcs.Deliver_Flag) Total_Deliver
    --, Count(DISTINCT fcs.send_Flag) - Count(DISTINCT fcs.Bounce_Flag) Total_Deliver
    , (SELECT COUNT(DISTINCT deliver_flag) 
      FROM   loyalty_bi_analytics.fact_campaign_sales_solus fcs INNER JOIN params ON fcs.campaign_name = params.campaign_name) Total_Deliver
    , Count(DISTINCT fcs.Click_Flag) Total_Click
    , Count(DISTINCT fcs.Open_Flag) Total_Open
    , Count(DISTINCT fcs.Activate_Flag) Total_Activate
    , Count(DISTINCT fcs.Redeem_Flag) Total_Redeem
    , sum(fcs.Reward_Val) Total_Cost
    , Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' AND coalesce(fcs.tot_amt_excld_gst_promo,0) > 0 THEN fcs.crn END) Shopper_Count
    
  
    , Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.Redeem_Flag END) Total_Member_Redeem_Send
    , Count(DISTINCT CASE WHEN overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag END) Total_Member_Redeem_Open
    , sum(CASE WHEN fcs.Campaign_Audience_Type='T' AND fcs.Redeem_Flag IS NOT NULL THEN basket_count END) Total_Basket_Redeem_Send
    , sum(CASE WHEN overall_open.crn IS NOT NULL AND fcs.Redeem_Flag IS NOT NULL THEN basket_count END) Total_Basket_Redeem_Open
    , sum(CASE WHEN fcs.Campaign_Audience_Type='T' THEN total_times_redeem_count END) Total_Item_Redeem_Send
    , sum(CASE WHEN overall_open.crn IS NOT NULL THEN total_times_redeem_count END) Total_Item_Redeem_Open
    , count(DISTINCT CASE WHEN max_number_of_products_redeemed = 1 and overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag else NULL END) Redeem_1_count
    , count(DISTINCT CASE WHEN max_number_of_products_redeemed = 2 and overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag else NULL END) Redeem_2_count
    , count(DISTINCT CASE WHEN max_number_of_products_redeemed = 3 and overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag else NULL END) Redeem_3_count
    , count(DISTINCT CASE WHEN max_number_of_products_redeemed = 4 and overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag else NULL END) Redeem_4_count
    , count(DISTINCT CASE WHEN max_number_of_products_redeemed = 5 and overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag else NULL END) Redeem_5_count
    , count(DISTINCT CASE WHEN max_number_of_products_redeemed = 6 and overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag else NULL END) Redeem_6_count
    , count(DISTINCT CASE WHEN max_number_of_products_redeemed = 7 and overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag else NULL END) Redeem_7_count
    , count(DISTINCT CASE WHEN max_number_of_products_redeemed = 8 and overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag else NULL END) Redeem_8_count
    , count(DISTINCT CASE WHEN max_number_of_products_redeemed = 9 and overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag else NULL END) Redeem_9_count
      
      
  
    , (sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_promo*1.00000 else 0 END)/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) Promo_Avg_Target_Spend
    , (sum( CASE WHEN overall_open.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_promo*1.00000 else 0 END)/(count (DISTINCT overall_open.crn))) Promo_Avg_Open_Spend
    , (sum( CASE WHEN overall_activate.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_promo*1.00000 else 0 END)/( count (DISTINCT overall_activate.crn))) Promo_Avg_Activate_Spend
    , (sum( CASE WHEN overall_redeem.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_promo*1.00000 else 0 END)/NULLIF(count (DISTINCT overall_redeem.crn),0)) Promo_Avg_Redeem_Send_Spend
    , (sum( CASE WHEN overall_redeem.crn IS NOT NULL AND overall_open.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_promo*1.00000 else 0 END)/NULLIF(count (DISTINCT CASE WHEN overall_open.crn IS NOT NULL THEN overall_redeem.crn END),0)) Promo_Avg_Redeem_Open_Spend
    , (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_promo*1.00000 else 0 END)/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)  Promo_Avg_Control_Spend
  
    /*
    The below metrics are not applicable on promo weeks basis
    */
      
    --, NULL::  NUMERIC(38,4) l4w_avg_target_spend  
    , (sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END),0)*1.0)*params.no_weeks L4W_Avg_Target_Spend
    , NULL::  NUMERIC(38,4) l4w_avg_open_spend  
    , NULL::  NUMERIC(38, 4)  l4w_avg_activate_spend  
    , NULL::  NUMERIC(38,4) l4w_avg_redeem_send_spend 
    , NULL::  NUMERIC(38,4) l4w_avg_redeem_open_spend 
    --, NULL::  NUMERIC(38,4) l4w_avg_control_spend 
    , (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)*params.no_weeks  L4W_Avg_Control_Spend
    , NULL::  NUMERIC(38,4) l8w_avg_target_spend  
    , NULL::  NUMERIC(38,4) l8w_avg_open_spend  
    , NULL::  NUMERIC(38, 4)  l8w_avg_activate_spend  
    , NULL::  NUMERIC(38,4) l8w_avg_redeem_send_spend 
    , NULL::  NUMERIC(38,4) l8w_avg_redeem_open_spend 
    , NULL::  NUMERIC(38,4) l8w_avg_control_spend 
    , NULL::  NUMERIC(38,4) post_avg_target_spend 
    , NULL::  NUMERIC(38,4) post_avg_open_spend 
    , NULL::  NUMERIC(38, 4)  post_avg_activate_spend 
    , NULL::  NUMERIC(38,4) post_avg_redeem_send_spend  
    , NULL::  NUMERIC(38,4) post_avg_redeem_open_spend  
    , NULL::  NUMERIC(38,4) post_avg_control_spend  
    , NULL::  NUMERIC(38,4) sply_avg_target_spend 
    , NULL::  NUMERIC(38,4) sply_avg_open_spend 
    , NULL::  NUMERIC(38, 4)  sply_avg_activate_spend 
    , NULL::  NUMERIC(38,4) sply_avg_redeem_send_spend  
    , NULL::  NUMERIC(38,4) sply_avg_redeem_open_spend  
    , NULL::  NUMERIC(38,4) sply_avg_control_spend  
    
    , NULL:: INTEGER new_to_TPG
    , NULL:: INTEGER repeat_to_TPG_promo
    , NULL:: INTEGER repeat_to_TPG_post 
  
    , sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.basket_count_promo*1.00000 else 0 END) basket_count_promo
    , NULL:: INTEGER  basket_count_post
    , NULL:: INTEGER  basket_count_L4W
    , NULL:: INTEGER  basket_count_L8W
    , NULL:: INTEGER  basket_count_SPLY
      
    , sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.TPG_basket_count_promo*1.00000 else 0 END) TPG_basket_count_promo
    , NULL:: INTEGER  TPG_basket_count_post
    , NULL:: INTEGER  TPG_basket_count_L4W
    , NULL:: INTEGER  TPG_basket_count_L8W
    , NULL:: INTEGER  TPG_basket_count_SPLY
    
  
      
    , (sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tpg_tot_amt_excld_gst_promo*1.00000 else 0 END)/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) TPG_Promo_Avg_Target_Spend
    , (sum( CASE WHEN overall_open.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_promo*1.00000 else 0 END)/(count (DISTINCT overall_open.crn))) TPG_Promo_Avg_Open_Spend
    , (sum( CASE WHEN overall_activate.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_promo*1.00000 else 0 END)/( count (DISTINCT overall_activate.crn))) TPG_Promo_Avg_Activate_Spend
    --, 1.000000 as TPG_Promo_Avg_Activate_Spend
    , (sum( CASE WHEN overall_redeem.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_promo*1.00000 else 0 END)/NULLIF(Count(DISTINCT overall_redeem.crn ),0)) TPG_Promo_Avg_Redeem_Send_Spend
    , (sum( CASE WHEN overall_open.crn IS NOT NULL AND overall_redeem.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_promo*1.00000 else 0 END)/NULLIF(Count(DISTINCT CASE WHEN overall_open.crn IS NOT NULL THEN overall_redeem.crn END),0)) TPG_Promo_Avg_Redeem_Open_Spend
    , (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tpg_tot_amt_excld_gst_promo*1.00000 else 0 END)/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)  TPG_Promo_Avg_Control_Spend
  
    , NULL::  NUMERIC(38,4) TPG_Post_Avg_Target_Spend
    , NULL::  NUMERIC(38,4) TPG_Post_Avg_Open_Spend
    , NULL::  NUMERIC(38,4) TPG_Post_Avg_Activate_Spend
    , NULL::  NUMERIC(38,4) TPG_Post_Avg_Redeem_Send_Spend
    , NULL::  NUMERIC(38,4) TPG_Post_Avg_Redeem_Open_Spend
    , NULL::  NUMERIC(38,4) TPG_Post_Avg_Control_Spend
      
    , NULL::  NUMERIC(38,4) TPG_L4W_Avg_Target_Spend
    , NULL::  NUMERIC(38,4) TPG_L4W_Avg_Open_Spend
    , NULL::  NUMERIC(38,4) TPG_L4W_Avg_Activate_Spend
    , NULL::  NUMERIC(38,4) TPG_L4W_Avg_Redeem_Send_Spend
    , NULL::  NUMERIC(38,4) TPG_L4W_Avg_Redeem_Open_Spend
    , NULL::  NUMERIC(38,4) TPG_L4W_Avg_Control_Spend
      
    , NULL::  NUMERIC(38,4) TPG_L8W_Avg_Target_Spend
    , NULL::  NUMERIC(38,4) TPG_L8W_Avg_Open_Spend
    , NULL::  NUMERIC(38,4) TPG_L8W_Avg_Activate_Spend
    , NULL::  NUMERIC(38,4) TPG_L8W_Avg_Redeem_Send_Spend
    , NULL::  NUMERIC(38,4) TPG_L8W_Avg_Redeem_Open_Spend
    , NULL::  NUMERIC(38,4) TPG_L8W_Avg_Control_Spend
  
  
    , count(DISTINCT CASE WHEN TPG_basket_count_promo > 0 AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END) AS member_shopped_TPG_promo
    , NULL::INTEGER AS member_shopped_TPG_post
    , NULL::INTEGER AS member_shopped_TPG_L4W
    , NULL::INTEGER AS member_shopped_TPG_L8W
    , sum(CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tpg_tot_amt_excld_gst_promo END) AS member_spend_TPG_promo
    , NULL::INTEGER AS member_spend_TPG_post
    , NULL::INTEGER AS member_spend_TPG_L4W
    , NULL::INTEGER AS member_spend_TPG_L8W
  
  
    , params.no_weeks
    , Post_Campaign_Weeks
    , Period_Description
    , Period_Sort_Order
    , Count(DISTINCT fcs.Unsub_Flag) Total_Unsub
    , Count(DISTINCT CASE WHEN fcs.cvm_segment IN ('HVHIGH','MVHIGH','HVMED','MVMEDA') THEN fcs.Unsub_Flag END)*1.00000/NULLIF(Count(DISTINCT CASE WHEN fcs.cvm_segment IN ('HVHIGH','MVHIGH','HVMED','MVMEDA') THEN fcs.deliver_Flag END),0) Val_Unsub_Rate
    , campaign_week_nbr -- this one must be the last column
  
    FROM 
    loyalty_bi_analytics.fact_campaign_sales_solus fcs 
    
      
      
      
    INNER JOIN params
    ON 
    fcs.campaign_name = params.campaign_name
    /*
    collect overall flag to calculate average spend during promo week - as the definition of average spend per promo week is
    the average spend of customers who opened/activated/redeemed campaign regardless which week they opened/activated/redeemed
    */  
      
      LEFT JOIN
    (
      SELECT 
      DISTINCT open_flag AS crn
      FROM loyalty_bi_analytics.fact_campaign_sales_solus fcs INNER JOIN params ON fcs.campaign_name = params.campaign_name
    ) AS overall_open
    ON overall_open.crn = fcs.crn
  
    LEFT JOIN
    (
      SELECT 
      DISTINCT activate_flag AS crn
      FROM loyalty_bi_analytics.fact_campaign_sales_solus fcs INNER JOIN params ON fcs.campaign_name = params.campaign_name
    ) AS overall_activate
    ON overall_activate.crn = fcs.crn
    
  
    LEFT JOIN
    (
      SELECT 
      DISTINCT redeem_flag AS crn
      FROM loyalty_bi_analytics.fact_campaign_sales_solus fcs INNER JOIN params ON fcs.campaign_name = params.campaign_name
    ) AS overall_redeem
    ON overall_redeem.crn = fcs.crn
    
    
    GROUP BY
    fcs.Campaign_Code
    , fcs.Campaign_Name
    , fcs.Campaign_Start_Date
    , fcs.campaign_week_nbr
    , params.no_weeks
    , params.post_campaign_weeks
    , Period_Description
    , Period_Sort_Order
  
  
  
  
    UNION ALL
    /*
    Second part of the script - populate total,L4W,L8W and SPLY
    */    
    SELECT a.*
      , weeks.campaign_week_nbr FROM
    ( 
      SELECT 
      fcs.Campaign_Code
      , fcs.Campaign_Name
      , fcs.Campaign_Start_Date
      , Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END) Target_Count
      , Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END) Control_Count
      , Count(DISTINCT fcs.send_Flag) Total_Send
      , Count(DISTINCT fcs.Bounce_Flag) Total_Bounce
      --, Count(DISTINCT fcs.Deliver_Flag) Total_Deliver
      --, Count(DISTINCT fcs.send_Flag) - Count(DISTINCT fcs.Bounce_Flag) Total_Deliver
      , (SELECT COUNT(DISTINCT deliver_flag) 
        FROM   loyalty_bi_analytics.fact_campaign_sales_solus fcs INNER JOIN params ON fcs.campaign_name = params.campaign_name) Total_Deliver
      , Count(DISTINCT fcs.Click_Flag) Total_Click
      , Count(DISTINCT fcs.Open_Flag) Total_Open
          , Count(DISTINCT fcs.Activate_Flag) Total_Activate
      , Count(DISTINCT fcs.Redeem_Flag) Total_Redeem
      , sum( fcs.Reward_Val) Total_Cost
      , Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' AND coalesce(fcs.tot_amt_excld_gst_promo,0) > 0 THEN fcs.crn END) Shopper_Count
      
      , Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.Redeem_Flag END) Total_Member_Redeem_Send
      , Count(DISTINCT CASE WHEN overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag END) Total_Member_Redeem_Open
      
      , sum(CASE WHEN fcs.Campaign_Audience_Type='T' AND fcs.Redeem_Flag IS NOT NULL THEN basket_count END) Total_Basket_Redeem_Send
      , sum(CASE WHEN overall_open.crn IS NOT NULL AND fcs.Redeem_Flag IS NOT NULL THEN basket_count END) Total_Basket_Redeem_Open
      
      , sum(CASE WHEN fcs.Campaign_Audience_Type='T' AND fcs.Redeem_Flag IS NOT NULL THEN total_times_redeem_count END) Total_Item_Redeem_Send
      , sum(CASE WHEN overall_open.crn IS NOT NULL AND fcs.Redeem_Flag IS NOT NULL THEN total_times_redeem_count END) Total_Item_Redeem_Open
      
      , count(DISTINCT CASE WHEN max_number_of_products_redeemed = 1 and overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag else NULL END) Redeem_1_count
      , count(DISTINCT CASE WHEN max_number_of_products_redeemed = 2 and overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag else NULL END) Redeem_2_count
      , count(DISTINCT CASE WHEN max_number_of_products_redeemed = 3 and overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag else NULL END) Redeem_3_count
      , count(DISTINCT CASE WHEN max_number_of_products_redeemed = 4 and overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag else NULL END) Redeem_4_count
      , count(DISTINCT CASE WHEN max_number_of_products_redeemed = 5 and overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag else NULL END) Redeem_5_count
      , count(DISTINCT CASE WHEN max_number_of_products_redeemed = 6 and overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag else NULL END) Redeem_6_count
      , count(DISTINCT CASE WHEN max_number_of_products_redeemed = 7 and overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag else NULL END) Redeem_7_count
      , count(DISTINCT CASE WHEN max_number_of_products_redeemed = 8 and overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag else NULL END) Redeem_8_count
      , count(DISTINCT CASE WHEN max_number_of_products_redeemed = 9 and overall_open.crn IS NOT NULL THEN fcs.Redeem_Flag else NULL END) Redeem_9_count 
  
      
      , (sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_promo*1.00000 else 0 END)/(params.no_weeks*1.0)/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) Promo_Avg_Target_Spend
      , (sum( CASE WHEN overall_open.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_promo*1.00000 else 0 END)/(params.no_weeks*1.0)/(count (DISTINCT overall_open.crn))) Promo_Avg_Open_Spend
      , (sum( CASE WHEN overall_activate.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_promo*1.00000 else 0 END)/(params.no_weeks*1.0)/(count (DISTINCT overall_activate.crn))) Promo_Avg_Activate_Spend
          --, 1.000000 as Promo_Avg_Activate_Spend
      , (sum( CASE WHEN overall_redeem.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_promo*1.00000 else 0 END)/(params.no_weeks*1.0)/NULLIF(count (DISTINCT overall_redeem.crn),0)) Promo_Avg_Redeem_Send_Spend
      , (sum( CASE WHEN overall_redeem.crn IS NOT NULL AND overall_open.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_promo*1.00000 else 0 END)/(params.no_weeks*1.0)/NULLIF(count (DISTINCT CASE WHEN overall_open.crn IS NOT NULL THEN overall_redeem.crn END),0)) Promo_Avg_Redeem_Open_Spend
      , (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_promo*1.00000 else 0 END)/(params.no_weeks*1.0)/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)  Promo_Avg_Control_Spend
  
      , (sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) L4W_Avg_Target_Spend
      , (sum( CASE WHEN overall_open.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(count (DISTINCT overall_open.crn))) L4W_Avg_Open_Spend
      , (sum( CASE WHEN overall_activate.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(count (DISTINCT overall_activate.crn))) L4W_Avg_Activate_Spend
          --, 1.000000 as L4W_Avg_Activate_Spend
      , (sum( CASE WHEN overall_redeem.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(count (DISTINCT overall_redeem.crn),0)) L4W_Avg_Redeem_Send_Spend
      , (sum( CASE WHEN overall_redeem.crn IS NOT NULL AND overall_open.crn IS NOT NULL  THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(count (DISTINCT CASE WHEN overall_open.crn IS NOT NULL THEN overall_redeem.crn END),0)) L4W_Avg_Redeem_Open_Spend
      , (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)  L4W_Avg_Control_Spend
      
      , (sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) L8W_Avg_Target_Spend
      , (sum( CASE WHEN overall_open.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(count (DISTINCT overall_open.crn))) L8W_Avg_Open_Spend
      , (sum( CASE WHEN overall_activate.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(count (DISTINCT overall_activate.crn))) L8W_Avg_Activate_Spend
          --, 1.000000 as L8W_Avg_Activate_Spend
      , (sum( CASE WHEN overall_redeem.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(count (DISTINCT overall_redeem.crn),0)) L8W_Avg_Redeem_Send_Spend
      , (sum( CASE WHEN overall_redeem.crn IS NOT NULL AND overall_open.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(count (DISTINCT CASE WHEN overall_open.crn IS NOT NULL THEN overall_redeem.crn END),0)) L8W_Avg_Redeem_Open_Spend
      , (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)  L8W_Avg_Control_Spend
      
      , coalesce((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_post*1.00000 else 0 END)/NULLIF(Post_Campaign_Weeks,0)/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0),0) Post_Avg_Target_Spend
      , coalesce((sum( CASE WHEN overall_open.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_post*1.00000 else 0 END)/NULLIF(Post_Campaign_Weeks,0)/(count (DISTINCT overall_open.crn))),0) Post_Avg_Open_Spend
      , coalesce((sum( CASE WHEN overall_activate.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_post*1.00000 else 0 END)/NULLIF(Post_Campaign_Weeks,0)/(count (DISTINCT overall_activate.crn))),0) Post_Avg_Activate_Spend
          --, 1.000000 as Post_Avg_Activate_Spend
      , coalesce((sum( CASE WHEN overall_redeem.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_post*1.00000 else 0 END)/NULLIF(Post_Campaign_Weeks,0)/NULLIF(count (DISTINCT overall_redeem.crn),0)),0) Post_Avg_Redeem_Send_Spend
      , coalesce((sum( CASE WHEN overall_redeem.crn IS NOT NULL AND overall_open.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_post*1.00000 else 0 END)/NULLIF(Post_Campaign_Weeks,0)/NULLIF(count (DISTINCT CASE WHEN overall_open.crn IS NOT NULL THEN overall_redeem.crn END ),0)),0) Post_Avg_Redeem_Open_Spend
      , coalesce((sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_post*1.00000 else 0 END)/NULLIF(Post_Campaign_Weeks,0)/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0),0)  Post_Avg_Control_Spend
  
      , 
      (--THIS YEAR L4W
      (sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4)
      ) * --index value
      (
      (sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_sply*1.00000 else 0 END)/(params.no_weeks*1.0)) /
      (sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4wly*1.00000 else 0 END)/4)
      )
      /(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END)) SPLY_avg_Target_Spend
  
      , 
      (--THIS YEAR L4W
      (sum( CASE WHEN overall_open.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4)
      ) * --index value
      (
      (sum( CASE WHEN overall_open.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_sply*1.00000 else 0 END)/(params.no_weeks*1.0)) /
      (sum( CASE WHEN overall_open.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_l4wly*1.00000 else 0 END)/4)
      )
      /(count (DISTINCT overall_open.crn)) SPLY_avg_Open_Spend
          
      , 
      (--THIS YEAR L4W
      (sum( CASE WHEN overall_activate.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4)
      ) * --index value
      (
      (sum( CASE WHEN overall_activate.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_sply*1.00000 else 0 END)/(params.no_weeks*1.0)) /
      (sum( CASE WHEN overall_activate.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_l4wly*1.00000 else 0 END)/4)
      )
      /(count (DISTINCT overall_activate.crn)) SPLY_avg_Activate_Spend
          
          --, 1.000000 as SPLY_avg_Activate_Spend
          
      , 
      (--THIS YEAR L4W
      (sum( CASE WHEN overall_redeem.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4)
      ) * --index value
      (
      (sum( CASE WHEN overall_redeem.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_sply*1.00000 else 0 END)/(params.no_weeks*1.0)) /
      (sum( CASE WHEN overall_redeem.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_l4wly*1.00000 else 0 END)/4)
      )
      /NULLIF(count (DISTINCT overall_redeem.crn),0) SPLY_avg_Redeem_Send_Spend
      , 
      (--THIS YEAR L4W
      (sum( CASE WHEN overall_redeem.crn IS NOT NULL AND overall_open.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4)
      ) * --index value
      (
      (sum( CASE WHEN overall_redeem.crn IS NOT NULL AND overall_open.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_sply*1.00000 else 0 END)/(params.no_weeks*1.0)) /
      (sum( CASE WHEN overall_redeem.crn IS NOT NULL AND overall_open.crn IS NOT NULL THEN fcs.tot_amt_excld_gst_l4wly*1.00000 else 0 END)/4)
      )
      /NULLIF(count (DISTINCT CASE WHEN overall_open.crn IS NOT NULL THEN overall_redeem.crn END),0) SPLY_avg_Redeem_Open_Spend
      , 
      (--THIS YEAR L4W
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4)
      ) * --index value
      (
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_sply*1.00000 else 0 END)/(params.no_weeks*1.0)) /
      (NULLIF(sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4wly*1.00000 else 0 END),0)/4)
      )
      /NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0) SPLY_avg_Control_Spend
  
  
  
  
      , count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' AND fcs.TPG_basket_count_L8W = 0 AND fcs.TPG_basket_count_promo > 0 THEN fcs.CRN END) new_to_TPG
      , count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' AND fcs.TPG_basket_count_L8W = 0 AND overall_basket_count_promo.TPG_basket_count_promo_overall > 1 THEN fcs.CRN END) repeat_to_TPG_promo
      , count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' AND fcs.TPG_basket_count_L8W = 0 AND overall_basket_count_promo.TPG_basket_count_promo_overall = 1 AND fcs.TPG_basket_count_post > 0 THEN fcs.CRN  END) repeat_to_TPG_post
      
      , sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.basket_count_promo*1.00000 else 0 END)/(params.no_weeks*1.0) basket_count_promo
      , sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.basket_count_post*1.00000 else 0 END)/NULLIF(Post_Campaign_Weeks,0) basket_count_post
      , sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.basket_count_L4W*1.00000 else 0 END)/4 basket_count_L4W
      , sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.basket_count_L8W*1.00000 else 0 END)/8 basket_count_L8W
      , sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.basket_count_SPLY*1.00000 else 0 END)/(params.no_weeks*1.0) basket_count_SPLY
          
      , sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.TPG_basket_count_promo*1.00000 else 0 END)/(params.no_weeks*1.0) TPG_basket_count_promo
      , sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.TPG_basket_count_post*1.00000 else 0 END)/NULLIF(Post_Campaign_Weeks,0) TPG_basket_count_post
      , sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.TPG_basket_count_L4W*1.00000 else 0 END)/4 TPG_basket_count_L4W
      , sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.TPG_basket_count_L8W*1.00000 else 0 END)/8 TPG_basket_count_L8W
      , sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.TPG_basket_count_SPLY*1.00000 else 0 END)/(params.no_weeks*1.0) TPG_basket_count_SPLY
  
      , (sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tpg_tot_amt_excld_gst_promo*1.00000 else 0 END)/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0)/(params.no_weeks*1.0) TPG_Promo_Avg_Target_Spend
      , (sum( CASE WHEN overall_open.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_promo*1.00000 else 0 END)/(count (DISTINCT overall_open.crn)))/(params.no_weeks*1.0) TPG_Promo_Avg_Open_Spend
          , (sum( CASE WHEN overall_activate.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_promo*1.00000 else 0 END)/(count (DISTINCT overall_activate.crn)))/(params.no_weeks*1.0) TPG_Promo_Avg_Activate_Spend
          --, 1.000000 as TPG_Promo_Avg_Activate_Spend
      , (sum( CASE WHEN overall_redeem.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_promo*1.00000 else 0 END)/NULLIF(Count(DISTINCT overall_redeem.crn),0))/(params.no_weeks*1.0) TPG_Promo_Avg_Redeem_Send_Spend
      , (sum( CASE WHEN overall_open.crn IS NOT NULL AND overall_redeem.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_promo*1.00000 else 0 END)/NULLIF(Count(DISTINCT CASE WHEN overall_open.crn IS NOT NULL THEN overall_redeem.crn END),0))/(params.no_weeks*1.0) TPG_Promo_Avg_Redeem_Open_Spend
      , (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tpg_tot_amt_excld_gst_promo*1.00000 else 0 END)/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)/(params.no_weeks*1.0)  TPG_Promo_Avg_Control_Spend
          
      , coalesce((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tpg_tot_amt_excld_gst_Post*1.00000 else 0 END)/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0)/(NULLIF(params.Post_Campaign_Weeks,0)*1.0),0) TPG_Post_Avg_Target_Spend
      , coalesce((sum( CASE WHEN overall_open.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_Post*1.00000 else 0 END)/(count (DISTINCT overall_open.crn)))/(NULLIF(params.Post_Campaign_Weeks,0)*1.0),0) TPG_Post_Avg_Open_Spend
      , coalesce((sum( CASE WHEN overall_activate.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_Post*1.00000 else 0 END)/(count (DISTINCT overall_activate.crn)))/(NULLIF(params.Post_Campaign_Weeks,0)*1.0),0) TPG_Post_Avg_Activate_Spend
          --, 1.000000 as TPG_Post_Avg_Activate_Spend
      , coalesce((sum( CASE WHEN overall_redeem.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_Post*1.00000 else 0 END)/NULLIF(Count(DISTINCT overall_redeem.crn),0))/(NULLIF(params.Post_Campaign_Weeks,0)*1.0),0) TPG_Post_Avg_Redeem_Send_Spend
      , coalesce((sum( CASE WHEN overall_open.crn IS NOT NULL AND overall_redeem.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_Post*1.00000 else 0 END)/NULLIF(Count(DISTINCT CASE WHEN overall_open.crn IS NOT NULL THEN overall_redeem.crn END),0))/(NULLIF(params.Post_Campaign_Weeks,0)*1.0),0) TPG_Post_Avg_Redeem_Open_Spend
      , coalesce((sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tpg_tot_amt_excld_gst_Post*1.00000 else 0 END)/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)/(NULLIF(params.Post_Campaign_Weeks,0)*1.0),0)  TPG_Post_Avg_Control_Spend
          
      , (sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tpg_tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) TPG_L4W_Avg_Target_Spend
      , (sum( CASE WHEN overall_open.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(count (DISTINCT overall_open.crn))) TPG_L4W_Avg_Open_Spend
          , (sum( CASE WHEN overall_activate.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(count (DISTINCT overall_activate.crn))) TPG_L4W_Avg_Activate_Spend
          --, 1.000000 as TPG_L4W_Avg_Activate_Spend
      , (sum( CASE WHEN overall_redeem.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT overall_redeem.crn),0)) TPG_L4W_Avg_Redeem_Send_Spend
      , (sum( CASE WHEN overall_open.crn IS NOT NULL AND overall_redeem.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_l4w*1.00000 else 0 END/4)/NULLIF(Count(DISTINCT CASE WHEN overall_open.crn IS NOT NULL THEN overall_redeem.crn END),0)) TPG_L4W_Avg_Redeem_Open_Spend
      , (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tpg_tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)  TPG_L4W_Avg_Control_Spend
          
      , (sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tpg_tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) TPG_L8W_Avg_Target_Spend
      , (sum( CASE WHEN overall_open.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(count (DISTINCT overall_open.crn))) TPG_L8W_Avg_Open_Spend
          , (sum( CASE WHEN overall_activate.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(count (DISTINCT overall_activate.crn))) TPG_L8W_Avg_Activate_Spend
          --, 1.000000 as TPG_L8W_Avg_Activate_Spend
      , (sum( CASE WHEN overall_redeem.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_l8w*1.00000 else 0 END/8)/NULLIF(Count(DISTINCT overall_redeem.crn),0)) TPG_L8W_Avg_Redeem_Send_Spend
      , (sum( CASE WHEN overall_open.crn IS NOT NULL AND overall_redeem.crn IS NOT NULL THEN fcs.tpg_tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(Count(DISTINCT CASE WHEN overall_open.crn IS NOT NULL THEN overall_redeem.crn END),0)) TPG_L8W_Avg_Redeem_Open_Spend
      , (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tpg_tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)  TPG_L8W_Avg_Control_Spend
      
      --, count(DISTINCT CASE WHEN TPG_basket_count_promo > 0 AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)/no_weeks AS member_shopped_TPG_promo
      , sum(CASE WHEN TPG_basket_count_promo > 0 AND fcs.Campaign_Audience_Type='T' THEN 1 END)/no_weeks AS member_shopped_TPG_promo
      
      , (  count(DISTINCT CASE WHEN TPG_basket_count_post_1W > 0 AND 1 <= Post_Campaign_Weeks AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_post_2W > 0 AND 2 <= Post_Campaign_Weeks AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_post_3W > 0 AND 3 <= Post_Campaign_Weeks AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_post_4W > 0 AND 4 <= Post_Campaign_Weeks AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_post_5W > 0 AND 5 <= Post_Campaign_Weeks AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_post_6W > 0 AND 6 <= Post_Campaign_Weeks AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_post_7W > 0 AND 7 <= Post_Campaign_Weeks AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_post_8W > 0 AND 8 <= Post_Campaign_Weeks AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_post_9W > 0 AND 9 <= Post_Campaign_Weeks AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_post_10W > 0 AND 10 <= Post_Campaign_Weeks AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_post_11W > 0 AND 11 <= Post_Campaign_Weeks AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_post_12W > 0 AND 12 <= Post_Campaign_Weeks AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      ) / NULLIF(Post_Campaign_Weeks,0) AS member_shopped_TPG_post
      
      
      , (count(DISTINCT CASE WHEN TPG_basket_count_pre_1w > 0 AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_pre_2w > 0 AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_pre_3w > 0 AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_pre_4w > 0 AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END))
      /4 AS member_shopped_TPG_L4W
      
      
      , (count(DISTINCT CASE WHEN TPG_basket_count_pre_1w > 0 AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_pre_2w > 0 AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_pre_3w > 0 AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_pre_4w > 0 AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_pre_5w > 0 AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_pre_6w > 0 AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_pre_7w > 0 AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END)
      + count(DISTINCT CASE WHEN TPG_basket_count_pre_8w > 0 AND fcs.Campaign_Audience_Type='T' THEN fcs.crn END))
      /8 AS member_shopped_TPG_L8W
      
      , sum(CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tpg_tot_amt_excld_gst_promo END)/no_weeks AS member_spend_TPG_promo
      , sum(CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tpg_tot_amt_excld_gst_post END)/NULLIF(Post_Campaign_Weeks,0) AS member_spend_TPG_post
      , sum(CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tpg_tot_amt_excld_gst_L4W END)/4 AS member_spend_TPG_L4W
      , sum(CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tpg_tot_amt_excld_gst_L8W END)/8 AS member_spend_TPG_L8W
      
  
  
      , params.no_weeks
      , Post_Campaign_Weeks
      , Period_Description
      , Period_Sort_Order
      , Count(DISTINCT fcs.Unsub_Flag) Total_Unsub
      , Count(DISTINCT CASE WHEN fcs.cvm_segment IN ('HVHIGH','MVHIGH','HVMED','MVMEDA') THEN fcs.Unsub_Flag END)*1.00000/NULLIF(Count(DISTINCT CASE WHEN fcs.cvm_segment IN ('HVHIGH','MVHIGH','HVMED','MVMEDA') THEN fcs.deliver_Flag END),0) Val_Unsub_Rate
      FROM 
  
      loyalty_bi_analytics.fact_campaign_sales_solus fcs
      
      INNER JOIN params
      ON 
      fcs.campaign_name = params.campaign_name
      /*
      collect overall flag to calculate average spend during promo week - as the definition of average spend per promo week is
      the average spend of customers who opened/activated/redeemed campaign regardless which week they opened/activated/redeemed
      */      
      LEFT JOIN
      (
        SELECT 
        DISTINCT open_flag AS crn
        FROM loyalty_bi_analytics.fact_campaign_sales_solus fcs INNER JOIN params ON fcs.campaign_name = params.campaign_name
      ) AS overall_open
      ON overall_open.crn = fcs.crn
          
      LEFT JOIN
      (
        SELECT 
        DISTINCT activate_flag AS crn
        FROM loyalty_bi_analytics.fact_campaign_sales_solus fcs INNER JOIN params ON fcs.campaign_name = params.campaign_name
      ) AS overall_activate
      ON overall_activate.crn = fcs.crn        
      
      LEFT JOIN
      (
        SELECT 
        DISTINCT redeem_flag AS crn
        FROM loyalty_bi_analytics.fact_campaign_sales_solus fcs INNER JOIN params ON fcs.campaign_name = params.campaign_name
      ) AS overall_redeem
      ON overall_redeem.crn = fcs.crn
      
      LEFT JOIN
      (
        SELECT 
        sum(fcs.TPG_basket_count_promo) AS TPG_basket_count_promo_overall,fcs.crn
        FROM loyalty_bi_analytics.fact_campaign_sales_solus fcs INNER JOIN params ON fcs.campaign_name = params.campaign_name
        GROUP BY fcs.crn
      ) AS overall_basket_count_promo
      ON overall_basket_count_promo.crn = fcs.crn
      
      GROUP BY
      fcs.Campaign_Code
      , fcs.Campaign_Name
      , fcs.Campaign_Start_Date
      , params.no_weeks
      , params.post_campaign_weeks
      , Period_Description
      , Period_Sort_Order
      
    ) AS  a
    CROSS JOIN
    (
      SELECT 100 AS campaign_week_nbr --100 is for total
      UNION ALL
      SELECT 101 AS campaign_week_nbr --101 post shop
      UNION ALL
      SELECT 102 AS campaign_week_nbr --L4W
      UNION ALL
      SELECT 103 AS campaign_week_nbr --L8W
      UNION ALL
      SELECT 104 AS campaign_week_nbr --LY
    ) AS  weeks
  )
  
  
  
  



cdabcc.sql.fcsummary03:
  /*delete old records*/
  DELETE FROM loyalty_bi_analytics.fact_campaign_summary
  --WHERE campaign_code = 'OSP-0005' AND campaign_start_date = '2016-12-16 00:00:00' 
  WHERE campaign_code = %s AND campaign_start_date = %s

cdabcc.sql.fcsummary04:
  INSERT INTO loyalty_bi_analytics.fact_campaign_summary
  With 
  params AS
  (
  
  SELECT DISTINCT dc.campaign_name || ' ' || dc.period_description AS campaign_name
    , dc.campaign_start_date
    , dc.period_description AS period_description
    , cast(to_char(first_offer_start_date, 'YYYYMM') AS int) AS Period_Sort_Order
    , case when getDate() < first_offer_start_date + (campaign_duration_weeks + post_campaign_weeks) * 7 - 1 then 0 else  post_campaign_weeks end as post_campaign_weeks
    --, cast( least(greatest(floor(date_diff('day',campaign_start_date,getdate())*1.0 / 7 )  - campaign_duration_weeks ,1) ,post_campaign_weeks) as int) as post_campaign_weeks
    , campaign_duration_weeks AS no_weeks
    , cast(case 
    when post_campaign_weeks = 0 then 'This campaign has no post period - Report is with promo data only'
    when post_campaign_weeks <> 0 and getDate() < first_offer_start_date + (campaign_duration_weeks + post_campaign_weeks) * 7 - 1 then 'Post period has not completed - Report is with promo data only'
    when post_campaign_weeks <> 0 and getDate() >= first_offer_start_date + (campaign_duration_weeks + post_campaign_weeks) * 7 - 1 then 'Post period has completed - Report is including post promo data'
    end as varchar(200)) as Note
    , cast(case 
    when post_campaign_weeks = 0 then ''
    when getDate() < first_offer_start_date + (campaign_duration_weeks + post_campaign_weeks) * 7 - 1 then '(excl. post period)'
    when getDate() >= first_offer_start_date + (campaign_duration_weeks + post_campaign_weeks) * 7 - 1 then '(incl. post period)'
    end as varchar(200)) as Note2      
    , cast(case 
    when post_campaign_weeks = 0 then 'Include Post Period'
    when getDate() < first_offer_start_date + (campaign_duration_weeks + post_campaign_weeks) * 7 - 1 then 'Exclude Post Period'
    when getDate() >= first_offer_start_date + (campaign_duration_weeks + post_campaign_weeks) * 7 - 1 then 'Include Post Period'
    end as varchar(200)) as Note3 
	, ctrl.representative_status
  FROM loyalty_bi_analytics.dim_campaign dc
  LEFT
  JOIN loyalty_bi_analytics.fact_campaign_control_representative ctrl
  ON   ctrl.campaign_name = dc.campaign_name || ' ' || dc.period_description
  AND  ctrl.column_name IN ('L4W','L8W')
  --WHERE campaign_code = 'WRC0002_V5' AND campaign_start_date = '2016-05-02 00:00:00'
  WHERE dc.campaign_code = %s AND dc.campaign_start_date = %s  
  
  
  )
  ,
  Campaign_Details 
  AS 
  (
    SELECT DISTINCT
    params.Period_Description AS Period_Description
    , params.Period_Sort_Order
    , fcs.Campaign_Start_Date AS promo_start_date
    , fcs.Campaign_Start_Date + 7*no_weeks - 1 AS  promo_end_date
    , fcs.Campaign_Start_Date
    , Campaign_Code
    , fcs.Campaign_Name
    , Campaign_Desc
    , Campaign_Objective
    , Campaign_Duration
    , Post_Campaign_Weeks
      , params.no_weeks
    , 'Summary' Report_Type
    , params.note3 Promotion_Period
    , params.note
    , params.note2
    , params.representative_status    
    FROM 
    loyalty_bi_analytics.fact_campaign_sales_solus fcs 
    CROSS JOIN params
    WHERE 
    fcs.campaign_name=params.campaign_name
    AND fcs.Campaign_Start_Date=params.Campaign_Start_Date
    
  )
  , 
  Campaign_Comm
  AS 
  ( 
  SELECT t.*, cd.note2, cd.representative_status FROM loyalty_bi_analytics.fact_campaign_temp_BCC_CDA t
  cross join Campaign_Details cd
  )
  ,
  
  mt AS
  (
  
  SELECT campaign_week_nbr, 10 Metric_Group_SortOrder, 'Campaign Metrics' Metric_Group_Name, 10 Metric_Sort_Order, 'Number of Targeted Members' Metric_Name,'#' Format_Type, (CASE WHEN campaign_week_nbr = 100 THEN cc.Target_Count else NULL END) AS value
  FROM 
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 10 Metric_Group_SortOrder, 'Campaign Metrics' Metric_Group_Name, 20 Metric_Sort_Order, 'Number of Control group Members' Metric_Name,'#' Format_Type, (CASE WHEN campaign_week_nbr = 100 THEN cc.Control_Count else NULL END) AS Control_Count
  FROM 
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 10 Metric_Group_SortOrder, 'Campaign Metrics' Metric_Group_Name, 30 Metric_Sort_Order, 'Open Rate (%% of Total Delivered)' Metric_Name, '%%' Format_Type, (CASE WHEN campaign_week_nbr = 100 THEN ((cc.Total_Open*1.0)/NULLIF(cc.Total_Deliver,0)) else NULL END) AS Open_Rate_Of_Total_Delivered
  FROM 
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 10 Metric_Group_SortOrder, 'Campaign Metrics' Metric_Group_Name, 35 Metric_Sort_Order, 'Unsub Rate (%% of Total Delivered)' Metric_Name, '%%' Format_Type, (CASE WHEN campaign_week_nbr = 100 THEN ((cc.Total_Unsub*1.0000)/cc.Total_Deliver) else NULL END) AS Unsub_Rate_Of_Total_Delivered
  FROM 
  Campaign_Comm cc WHERE campaign_week_nbr = 100  
  UNION ALL  
  SELECT campaign_week_nbr, 10 Metric_Group_SortOrder, 'Campaign Metrics' Metric_Group_Name, 35 Metric_Sort_Order, 'Unsub Rate - Valuable Members(%% of Total Delivered)' Metric_Name, '%%' Format_Type, (CASE WHEN campaign_week_nbr = 100 AND cc.Total_Deliver > 100 THEN cc.Val_Unsub_Rate else NULL END) AS Unsub_Rate_val_Of_Total_Delivered
  FROM 
  Campaign_Comm cc WHERE campaign_week_nbr = 100
  UNION ALL  
  SELECT campaign_week_nbr, 10 Metric_Group_SortOrder, 'Campaign Metrics' Metric_Group_Name, 40 Metric_Sort_Order, 'Activation Rate (%% of Total Opened)' Metric_Name, '%%' Format_Type, (CASE WHEN campaign_week_nbr = 100 THEN ((cc.Total_Activate*1.0)/NULLIF(cc.Total_Open,0)) else NULL END) AS Activate_Rate_Of_Total_Open
  FROM 
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 10 Metric_Group_SortOrder, 'Campaign Metrics' Metric_Group_Name, 50 Metric_Sort_Order, 'Number of Redeemed Members' Metric_Name, '#' Format_Type, (CASE WHEN campaign_week_nbr = 100 THEN cc.Total_Member_Redeem_Send*1.0 else NULL END) AS  Redeemed_Members
  FROM 
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 10 Metric_Group_SortOrder, 'Campaign Metrics' Metric_Group_Name, 60 Metric_Sort_Order, 'Redemption rate (%% of opened)' Metric_Name, '%%' Format_Type, (CASE WHEN campaign_week_nbr = 100 THEN ((cc.Total_Member_Redeem_Open*1.0)/NULLIF(cc.Total_Open,0)) else NULL END) AS Redemption_Rate_Of_Total_Opened
  FROM 
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 10 Metric_Group_SortOrder, 'Campaign Metrics' Metric_Group_Name, 70 Metric_Sort_Order, 'Campaign Cost' Metric_Name,'$' Format_Type, cc.Total_Cost Total_Campaign_Cost
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100 
  UNION ALL  
  SELECT campaign_week_nbr, 20 Metric_Group_SortOrder, 'Target vs Control Metrics' Metric_Group_Name, 10 Metric_Sort_Order, 'Average Spend / Target Customer (excl. post period)' Metric_Name, '$' Format_Type, Promo_Avg_Target_Spend
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 20 Metric_Group_SortOrder, 'Target vs Control Metrics' Metric_Group_Name, 20 Metric_Sort_Order, 'Average Spend / Control Customer (excl. post period)' Metric_Name,'$' Format_Type, Promo_Avg_Control_Spend
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 20 Metric_Group_SortOrder, 'Target vs Control Metrics' Metric_Group_Name, 30 Metric_Sort_Order, 'Weekly Increase in Spend Target vs Control (%%) (excl. post period)' Metric_Name,'%%' Format_Type, ((Promo_Avg_Target_Spend - Promo_Avg_Control_Spend)/Promo_Avg_Control_Spend) Promo_Increase_Target_vs_Contol
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 20 Metric_Group_SortOrder, 'Target vs Control Metrics' Metric_Group_Name, 40 Metric_Sort_Order, 'Weekly Increase in Spend Target vs Control ($) (excl. post period)' Metric_Name, '$' Format_Type, Promo_Avg_Target_Spend - Promo_Avg_Control_Spend Promo_Increase_Target_vs_Contol
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 20 Metric_Group_SortOrder, 'Target vs Control Metrics' Metric_Group_Name, 50 Metric_Sort_Order, 'Incremental Sales Target ' || cc.note2 Metric_Name,'$' Format_Type, 
  CASE WHEN representative_status = 0
  THEN
  CASE WHEN campaign_week_nbr < 100 THEN ((Promo_Avg_Target_Spend - Promo_Avg_Control_Spend)*cc.Target_Count)
  WHEN campaign_week_nbr = 100 THEN (((Promo_Avg_Target_Spend * no_weeks + post_avg_target_spend * post_campaign_weeks) / (no_weeks + post_campaign_weeks) - (Promo_Avg_Control_Spend * no_weeks + Post_Avg_Control_Spend * post_campaign_weeks) / (no_weeks + post_campaign_weeks))*cc.Target_Count) * (no_weeks + post_campaign_weeks)
  END 
  WHEN representative_status = 1 
  THEN 
  CASE WHEN campaign_week_nbr < 100 THEN (((Promo_Avg_Target_Spend - Promo_Avg_Control_Spend) - (l4w_avg_target_spend - l4w_avg_control_spend))*cc.Target_Count)
  WHEN campaign_week_nbr = 100 THEN ((((Promo_Avg_Target_Spend * no_weeks + post_avg_target_spend * post_campaign_weeks) / (no_weeks + post_campaign_weeks) - (Promo_Avg_Control_Spend * no_weeks + Post_Avg_Control_Spend * post_campaign_weeks) / (no_weeks + post_campaign_weeks))*cc.Target_Count) - (l4w_avg_target_spend - l4w_avg_control_spend)*cc.Target_Count) * (no_weeks + post_campaign_weeks)
  END 
  END Inc_Sales_Target
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 20 Metric_Group_SortOrder, 'Target vs Control Metrics' Metric_Group_Name, 60 Metric_Sort_Order, 'Total SCR Target vs Control ' || cc.note2  Metric_Name, '##' Format_Type, 
  CASE WHEN representative_status = 0
  THEN
  CASE WHEN campaign_week_nbr < 100 THEN ((Promo_Avg_Target_Spend - Promo_Avg_Control_Spend)*cc.Target_Count) /NULLIF(cc.Total_Cost,0)
  WHEN campaign_week_nbr = 100 THEN (((Promo_Avg_Target_Spend * no_weeks + post_avg_target_spend * post_campaign_weeks) / (no_weeks + post_campaign_weeks) - (Promo_Avg_Control_Spend * no_weeks + Post_Avg_Control_Spend * post_campaign_weeks) / (no_weeks + post_campaign_weeks))*cc.Target_Count) * (no_weeks + post_campaign_weeks) /NULLIF(cc.Total_Cost,0)
  END
  WHEN representative_status = 1 
  THEN
  CASE WHEN campaign_week_nbr < 100 THEN (((Promo_Avg_Target_Spend - Promo_Avg_Control_Spend) - (l4w_avg_target_spend - l4w_avg_control_spend))*cc.Target_Count) /NULLIF(cc.Total_Cost,0)
  WHEN campaign_week_nbr = 100 THEN ((((Promo_Avg_Target_Spend * no_weeks + post_avg_target_spend * post_campaign_weeks) / (no_weeks + post_campaign_weeks) - (Promo_Avg_Control_Spend * no_weeks + Post_Avg_Control_Spend * post_campaign_weeks) / (no_weeks + post_campaign_weeks))*cc.Target_Count) - (l4w_avg_target_spend - l4w_avg_control_spend)*cc.Target_Count) * (no_weeks + post_campaign_weeks) /NULLIF(cc.Total_Cost,0)
  END 
  END Tot_SCR_Target_Control  
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 20 Metric_Group_SortOrder, 'Target vs Control Metrics' Metric_Group_Name, 70 Metric_Sort_Order, 'Return per Contact '|| cc.note2 Metric_Name, '$' Format_Type,
  CASE WHEN representative_status = 0
  THEN
  CASE WHEN campaign_week_nbr < 100 THEN ((Promo_Avg_Target_Spend - Promo_Avg_Control_Spend)*cc.Target_Count) / NULLIF(cc.Total_Deliver,0)
  WHEN campaign_week_nbr = 100 THEN (((Promo_Avg_Target_Spend * no_weeks + post_avg_target_spend * post_campaign_weeks) / (no_weeks + post_campaign_weeks) - (Promo_Avg_Control_Spend * no_weeks + Post_Avg_Control_Spend * post_campaign_weeks) / (no_weeks + post_campaign_weeks))*cc.Target_Count) * (no_weeks + post_campaign_weeks) / NULLIF(cc.Total_Deliver,0)
  END
  WHEN representative_status = 1 
  THEN
  CASE WHEN campaign_week_nbr < 100 THEN (((Promo_Avg_Target_Spend - Promo_Avg_Control_Spend) - (l4w_avg_target_spend - l4w_avg_control_spend))*cc.Target_Count) / NULLIF(cc.Total_Deliver,0)
  WHEN campaign_week_nbr = 100 THEN ((((Promo_Avg_Target_Spend * no_weeks + post_avg_target_spend * post_campaign_weeks) / (no_weeks + post_campaign_weeks) - (Promo_Avg_Control_Spend * no_weeks + Post_Avg_Control_Spend * post_campaign_weeks) / (no_weeks + post_campaign_weeks))*cc.Target_Count) - (l4w_avg_target_spend - l4w_avg_control_spend)*cc.Target_Count) * (no_weeks + post_campaign_weeks) / NULLIF(cc.Total_Deliver,0)
  END
  END  Return_Per_Contact  
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 30 Metric_Group_SortOrder, 'Uplift Metrics 4 Weeks Prior' Metric_Group_Name, 10 Metric_Sort_Order, 'Average Spend / Redeem customer (excl. post period)' Metric_Name, '$' Format_Type,(CASE WHEN campaign_week_nbr = 100 THEN cc.Promo_Avg_Redeem_Send_Spend else NULL END) AS Promo_Avg_Redeem_Send_Spend
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 30 Metric_Group_SortOrder, 'Uplift Metrics 4 Weeks Prior' Metric_Group_Name, 20 Metric_Sort_Order, 'Average Spend / Redeem customer L4W' Metric_Name, '$' Format_Type, (CASE WHEN campaign_week_nbr = 100 THEN cc.L4W_Avg_Redeem_Send_Spend else NULL END) AS L4W_Avg_Redeem_Spend
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 30 Metric_Group_SortOrder, 'Uplift Metrics 4 Weeks Prior' Metric_Group_Name, 30 Metric_Sort_Order, '%% Increase in Redeemer Average Weekly Spend vs L4W (excl. post period)' Metric_Name,'%%' Format_Type,
  (CASE WHEN campaign_week_nbr = 100 THEN ((cc.Promo_Avg_Redeem_Send_Spend-cc.L4W_Avg_Redeem_Send_Spend)/cc.L4W_Avg_Redeem_Send_Spend) else NULL END) AS pct_redeem_promovsl4w
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL 
  SELECT campaign_week_nbr, 30 Metric_Group_SortOrder, 'Uplift Metrics 4 Weeks Prior' Metric_Group_Name, 40 Metric_Sort_Order, '$ Increase in Redeemer Average Weekly Spend vs L4W (excl. post period)' Metric_Name,'$' Format_Type,
  (CASE WHEN campaign_week_nbr = 100 THEN (cc.Promo_Avg_Redeem_Send_Spend-cc.L4W_Avg_Redeem_Send_Spend) else NULL END) AS spend_redeem_Send_promovsl4w
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 30 Metric_Group_SortOrder, 'Uplift Metrics 4 Weeks Prior' Metric_Group_Name, 50 Metric_Sort_Order, 'Total Sales Uplift Redeemed vs L4W '|| cc.note2    Metric_Name, '$' Format_Type,
  (CASE WHEN campaign_week_nbr = 100 THEN (((cc.Promo_Avg_Redeem_Send_Spend * no_weeks + Post_Avg_Redeem_Send_Spend * post_campaign_weeks ) / (no_weeks + post_campaign_weeks))-cc.L4W_Avg_Redeem_Send_Spend)*cc.Total_Redeem*(no_weeks+ post_campaign_weeks) else NULL END) AS uplift_redeem_promovsl4w

  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 30 Metric_Group_SortOrder, 'Uplift Metrics 4 Weeks Prior' Metric_Group_Name, 60 Metric_Sort_Order, 'Implied SCR Redeemed Promo Period vs L4W '|| cc.note2 Metric_Name,'##' Format_Type,
  (CASE WHEN campaign_week_nbr = 100 THEN ((((cc.Promo_Avg_Redeem_Send_Spend * no_weeks + Post_Avg_Redeem_Send_Spend * post_campaign_weeks ) / (no_weeks + post_campaign_weeks))-cc.L4W_Avg_Redeem_Send_Spend)*cc.Total_Redeem*(no_weeks+ post_campaign_weeks))/cc.Total_Cost else NULL END) AS scr_redeem_promovsl4w

  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Uplift Metrics 8 Weeks Prior' Metric_Group_Name, 10 Metric_Sort_Order, 'Average Spend / Redeem customer (excl. post period)' Metric_Name, '$' Format_Type,(CASE WHEN campaign_week_nbr = 100 THEN cc.Promo_Avg_Redeem_Send_Spend else NULL END) AS Promo_Avg_Redeem_Spend
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Uplift Metrics 8 Weeks Prior' Metric_Group_Name, 20 Metric_Sort_Order, 'Average Spend / Redeem customer L8W' Metric_Name, '$' Format_Type, (CASE WHEN campaign_week_nbr = 100 THEN cc.L8W_Avg_Redeem_Send_Spend else NULL END) AS L8W_Avg_Redeem_Spend
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Uplift Metrics 8 Weeks Prior' Metric_Group_Name, 30 Metric_Sort_Order, '%% Increase in Redeemer Average Weekly Spend vs L8W (excl. post period)' Metric_Name, '%%' Format_Type,
  (CASE WHEN campaign_week_nbr = 100 THEN ((cc.Promo_Avg_Redeem_Send_Spend-cc.L8W_Avg_Redeem_Send_Spend)/cc.L8W_Avg_Redeem_Send_Spend) else NULL END) AS pct_redeem_promovsl8w
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL 
  SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Uplift Metrics 8 Weeks Prior' Metric_Group_Name, 40 Metric_Sort_Order, '$ Increase in Redeemer Average Weekly Spend vs L8W (excl. post period)' Metric_Name,'$' Format_Type,
  (CASE WHEN campaign_week_nbr = 100 THEN (cc.Promo_Avg_Redeem_Send_Spend-cc.L8W_Avg_Redeem_Send_Spend) else NULL END) AS spend_redeem_promovsl8w
  
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Uplift Metrics 8 Weeks Prior' Metric_Group_Name, 50 Metric_Sort_Order, 'Total Sales Uplift Redeemed vs L8W '|| cc.note2  Metric_Name,'$' Format_Type,
  (CASE WHEN campaign_week_nbr = 100 THEN (((cc.Promo_Avg_Redeem_Send_Spend * no_weeks + Post_Avg_Redeem_Send_Spend * post_campaign_weeks ) / (no_weeks + post_campaign_weeks))-cc.L8W_Avg_Redeem_Send_Spend)*cc.Total_Redeem*(no_weeks+ post_campaign_weeks)  else NULL END) AS uplift_redeem_promovsl8w
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Uplift Metrics 8 Weeks Prior' Metric_Group_Name, 60 Metric_Sort_Order, 'Implied SCR Redeemed Promo Period vs L8W '|| cc.note2 Metric_Name, '##' Format_Type,
  (CASE WHEN campaign_week_nbr = 100 THEN ((((cc.Promo_Avg_Redeem_Send_Spend * no_weeks + Post_Avg_Redeem_Send_Spend * post_campaign_weeks ) / (no_weeks + post_campaign_weeks))-cc.L8W_Avg_Redeem_Send_Spend)*cc.Total_Redeem*(no_weeks+ post_campaign_weeks))/cc.Total_Cost else NULL END) AS scr_redeem_promovsl8w
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  
  UNION ALL  
  SELECT campaign_week_nbr, 50 Metric_Group_SortOrder, 'Uplift Metrics Same Period Last Year' Metric_Group_Name, 2 Metric_Sort_Order, 'Average Spend / Redeem customer (excl. post period)' Metric_Name, '$' Format_Type,(CASE WHEN campaign_week_nbr = 100 THEN cc.Promo_Avg_Redeem_Send_Spend else NULL END) AS Promo_Avg_Redeem_Spend
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 50 Metric_Group_SortOrder, 'Uplift Metrics Same Period Last Year' Metric_Group_Name, 6 Metric_Sort_Order, 'Average Spend / Redeem customer LY' Metric_Name, '$' Format_Type, (CASE WHEN campaign_week_nbr = 100 THEN cc.SPLY_Avg_Redeem_Send_Spend else NULL END) AS SPLY_Avg_Redeem_Spend
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100  
  
  
  UNION ALL  
  SELECT campaign_week_nbr, 50 Metric_Group_SortOrder, 'Uplift Metrics Same Period Last Year' Metric_Group_Name, 10 Metric_Sort_Order, '%% Increase in Redeemer Average Weekly Spend vs LY (excl. post period)' Metric_Name, '%%' Format_Type,
  (CASE WHEN campaign_week_nbr = 100 THEN ((cc.Promo_Avg_Redeem_Send_Spend-cc.SPLY_avg_Redeem_Send_Spend)/cc.SPLY_avg_Redeem_Send_Spend) else NULL END) AS pct_redeem_promovsly
  
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL 
  SELECT campaign_week_nbr, 50 Metric_Group_SortOrder, 'Uplift Metrics Same Period Last Year' Metric_Group_Name, 20 Metric_Sort_Order, '$ Increase in Redeemer Average Weekly Spend vs LY (excl. post period)' Metric_Name,'$' Format_Type,
  (CASE WHEN campaign_week_nbr = 100 THEN (cc.Promo_Avg_Redeem_Send_Spend-cc.SPLY_avg_Redeem_Send_Spend) else NULL END) AS spend_redeem_promovsly
  
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 50 Metric_Group_SortOrder, 'Uplift Metrics Same Period Last Year' Metric_Group_Name, 30 Metric_Sort_Order, 'Total Sales Uplift Redeemed vs LY )' ||cc.note2 Metric_Name,'$' Format_Type,
  (CASE WHEN campaign_week_nbr = 100 THEN (((cc.Promo_Avg_Redeem_Send_Spend * no_weeks + Post_Avg_Redeem_Send_Spend * post_campaign_weeks ) / (no_weeks + post_campaign_weeks))-cc.SPLY_Avg_Redeem_Send_Spend)*cc.Total_Redeem*(no_weeks+ post_campaign_weeks)  else NULL END) AS uplift_redeem_promovsl8w
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  UNION ALL  
  SELECT campaign_week_nbr, 50 Metric_Group_SortOrder, 'Uplift Metrics Same Period Last Year' Metric_Group_Name, 40 Metric_Sort_Order, 'Implied SCR Redeemed Promo Period vs LY )' ||cc.note2 Metric_Name,'##' Format_Type,
  (CASE WHEN campaign_week_nbr = 100 THEN ((((cc.Promo_Avg_Redeem_Send_Spend * no_weeks + Post_Avg_Redeem_Send_Spend * post_campaign_weeks ) / (no_weeks + post_campaign_weeks))-cc.SPLY_Avg_Redeem_Send_Spend)*cc.Total_Redeem*(no_weeks+ post_campaign_weeks))/cc.Total_Cost else NULL END) AS scr_redeem_promovsl8w
  FROM
  Campaign_Comm cc WHERE campaign_week_nbr <= 100
  
  
  )
  
 
  
  SELECT DISTINCT
    cd.Period_Description
    , cd.Period_Sort_Order
    , cd.Campaign_Code
    , cd.Campaign_Name
    , cd.Campaign_Start_Date
    , cd.Campaign_Desc
    , cd.Campaign_Objective
    , cd.Campaign_Duration
    , cd.Post_Campaign_Weeks
    , cd.Report_Type
    , cd.Promotion_Period
    , mt.Metric_Group_SortOrder
    , mt.Metric_Group_Name
    , mt.Metric_Sort_Order 
    , mt.Metric_Name
    , CASE WHEN mt.campaign_week_nbr = 100 THEN 'Total' else 'Week ' + cast(mt.campaign_week_nbr AS varchar) END AS campaign_week_nbr
    , cast(mt.campaign_week_nbr AS int) AS week_nbr_sort_order
    ,
    CASE 
      WHEN mt.campaign_week_nbr < 100 THEN
      to_char(DATEADD(day,7*(campaign_week_nbr-1),Campaign_Start_Date) ,'dd-mm-yyyy') || ' - ' || to_char(DATEADD(day,7*(campaign_week_nbr-1) + 6 ,Campaign_Start_Date) ,'dd-mm-yyyy')   
      WHEN mt.campaign_week_nbr = 100 THEN    
      to_char(DATEADD(day,0,Campaign_Start_Date) ,'dd-mm-yyyy') || ' - ' || to_char(DATEADD(day,7*(no_weeks + Post_Campaign_Weeks -1) + 6 ,Campaign_Start_Date) ,'dd-mm-yyyy') 
    END
    AS column_period
    ,
    CASE 
      WHEN mt.format_type='##' THEN to_char(mt.Value, 'FM999,999,999,990D00')
      WHEN mt.format_type='#' THEN to_char(mt.Value, 'FM999,999,999,990')
      WHEN mt.format_type='$' THEN to_char(mt.Value, 'FM$999,999,999,990D00')
      WHEN mt.format_type='%%' THEN to_char(mt.Value*100, 'FM999,999,999,990D00')||' %%' 
      WHEN mt.format_type='%%%%' THEN to_char(mt.Value*100, 'FM999,999,999,990D0000')||' %%' 
      else to_char(mt.Value, 'FM999,999,999,990D00')
    END AS Value
    , cd.note
  FROM
  mt
  
  CROSS JOIN 
  Campaign_details cd
  WHERE mt.campaign_week_nbr >= (case when cd.no_weeks = 1 then 100 else 0 end)
  
  
  
  
  
  
cdabcc.sql.fcsummary05:
  INSERT INTO loyalty_bi_analytics.fact_campaign_summary
  With 
  params AS
  (
  SELECT DISTINCT dc.campaign_name || ' ' || dc.period_description AS campaign_name
    , dc.campaign_start_date 
    , dc.period_description AS period_description
    , cast(to_char(first_offer_start_date, 'YYYYMM') AS int) AS Period_Sort_Order
    , case when getDate() < first_offer_start_date + (campaign_duration_weeks + post_campaign_weeks) * 7 - 1 then 0 else  post_campaign_weeks end as post_campaign_weeks
    --, cast( least(greatest(floor(date_diff('day',campaign_start_date,getdate())*1.0 / 7 )  - campaign_duration_weeks ,1) ,post_campaign_weeks) as int) as post_campaign_weeks
    , campaign_duration_weeks AS no_weeks
    , cast(case 
    when post_campaign_weeks = 0 then 'This campaign has no post period - Report is with promo data only'
    when post_campaign_weeks <> 0 and getDate() < first_offer_start_date + (campaign_duration_weeks + post_campaign_weeks) * 7 - 1 then 'Post period has not completed - Report is with promo data only'
    when post_campaign_weeks <> 0 and getDate() >= first_offer_start_date + (campaign_duration_weeks + post_campaign_weeks) * 7 - 1 then 'Post period has completed - Report is including post promo data'
    end as varchar(200)) as Note
    , cast(case 
    when post_campaign_weeks = 0 then ''
    when getDate() < first_offer_start_date + (campaign_duration_weeks + post_campaign_weeks) * 7 - 1 then '(excl. post period)'
    when getDate() >= first_offer_start_date + (campaign_duration_weeks + post_campaign_weeks) * 7 - 1 then '(incl. post period)'
    end as varchar(200)) as Note2      
    , cast(case 
    when post_campaign_weeks = 0 then 'Include Post Period'
    when getDate() < first_offer_start_date + (campaign_duration_weeks + post_campaign_weeks) * 7 - 1 then 'Exclude Post Period'
    when getDate() >= first_offer_start_date + (campaign_duration_weeks + post_campaign_weeks) * 7 - 1 then 'Include Post Period'
    end as varchar(200)) as Note3
    , ctrl.representative_status	
  FROM loyalty_bi_analytics.dim_campaign dc
  LEFT
  JOIN loyalty_bi_analytics.fact_campaign_control_representative ctrl
  ON   ctrl.campaign_name = dc.campaign_name || ' ' || dc.period_description
  AND  ctrl.column_name IN ('L4W','L8W')
  --WHERE campaign_code = 'WRC0002_V5' AND campaign_start_date = '2016-05-02 00:00:00'
  WHERE dc.campaign_code = %s AND dc.campaign_start_date = %s  
  )
  ,
  Campaign_Details 
  AS 
  (
    SELECT DISTINCT
    params.Period_Description AS Period_Description
    , params.Period_Sort_Order
    , fcs.Campaign_Start_Date AS promo_start_date
    , fcs.Campaign_Start_Date + 7*no_weeks - 1 AS  promo_end_date
    , fcs.Campaign_Start_Date
    , fcs.Campaign_Code
    , fcs.Campaign_Name
    , Campaign_Desc
    , Campaign_Objective
    , Campaign_Duration
    , Post_Campaign_Weeks
    , params.no_weeks    
    , 'Detailed' Report_Type
    , params.note3 Promotion_Period
    , 0 as no_product_groups
    , params.note
    , params.note2 
    , params.representative_status	
    FROM 
    loyalty_bi_analytics.fact_campaign_sales_solus fcs 
    CROSS JOIN params
    WHERE 
    fcs.campaign_name=params.campaign_name
    AND fcs.Campaign_Start_Date=params.Campaign_Start_Date
    
  )
  , 
  Campaign_Comm
  AS 
  ( 
  SELECT t.*,cd.representative_status  FROM loyalty_bi_analytics.fact_campaign_temp_BCC_CDA t
  cross join Campaign_Details cd
  )
  ,
  mt AS
  (
  
  
      SELECT campaign_week_nbr, 10 Metric_Group_SortOrder, 'Campaign Metrics' Metric_Group_Name, 10 Metric_Sort_Order, '# Unique target customers' Metric_Name,'#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Target_Count else NULL END) AS value
      FROM Campaign_Comm cc
      UNION ALL
      SELECT campaign_week_nbr, 10 Metric_Group_SortOrder, 'Campaign Metrics' Metric_Group_Name, 20 Metric_Sort_Order, '# Unique control customers' Metric_Name,'#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Control_Count else NULL END) AS Control_Count
      FROM Campaign_Comm cc
  
      UNION ALL
      SELECT campaign_week_nbr, 20 Metric_Group_SortOrder, 'Operational' Metric_Group_Name, 10 Metric_Sort_Order, 'Email delivery rate' Metric_Name,'%%' Format_Type, (CASE WHEN campaign_week_nbr = 100 THEN cc.Total_Deliver*1.00/NULLIF(cc.Total_Send,0) else NULL END) AS Delivery_Rate
      FROM Campaign_Comm cc
      UNION ALL
      SELECT campaign_week_nbr, 20 Metric_Group_SortOrder, 'Operational' Metric_Group_Name, 20 Metric_Sort_Order, '# of Emails Bounced' Metric_Name,'#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN total_bounce else NULL END) AS Bounce_count
      FROM Campaign_Comm cc
  
      UNION ALL
      SELECT campaign_week_nbr, 30 Metric_Group_SortOrder, 'Engagement' Metric_Group_Name, 10 Metric_Sort_Order, '# of Emails Sent' Metric_Name,'#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Total_Send else NULL END) AS Send_Count
      FROM Campaign_Comm cc
      UNION ALL
      SELECT campaign_week_nbr, 30 Metric_Group_SortOrder, 'Engagement' Metric_Group_Name, 20 Metric_Sort_Order, '# of Emails Delivered' Metric_Name,'#' Format_Type, (CASE WHEN campaign_week_nbr = 100 THEN cc.Total_Deliver else NULL END) AS Deliver_Count
      FROM Campaign_Comm cc
      UNION ALL
      SELECT campaign_week_nbr, 30 Metric_Group_SortOrder, 'Engagement' Metric_Group_Name, 30 Metric_Sort_Order, '# of Emails Opened' Metric_Name,'#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Total_Open else NULL END) AS Open_Count
      FROM Campaign_Comm cc
      UNION ALL
      SELECT campaign_week_nbr, 30 Metric_Group_SortOrder, 'Engagement' Metric_Group_Name, 40 Metric_Sort_Order, '# of Emails Clicked' Metric_Name,'#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Total_Click else NULL END) AS Click_Count
      FROM Campaign_Comm cc
      UNION ALL  
      SELECT campaign_week_nbr, 30 Metric_Group_SortOrder, 'Engagement' Metric_Group_Name, 45 Metric_Sort_Order, '# of Emails Unsub' Metric_Name,'#' Format_Type, (CASE WHEN campaign_week_nbr = 100 THEN cc.Total_Unsub else NULL END) AS Click_count
      FROM 
      Campaign_Comm cc WHERE campaign_week_nbr = 100 
      UNION ALL
      SELECT campaign_week_nbr, 30 Metric_Group_SortOrder, 'Engagement' Metric_Group_Name, 50 Metric_Sort_Order, '# of Emails Activated' Metric_Name,'#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Total_Activate else NULL END) AS Activate_Count
      FROM Campaign_Comm cc
      UNION ALL
      SELECT campaign_week_nbr, 30 Metric_Group_SortOrder, 'Engagement' Metric_Group_Name, 60 Metric_Sort_Order, '# of Member Shopped' Metric_Name,'#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Shopper_Count else NULL END) AS Shopper_Count
      FROM Campaign_Comm cc
      UNION ALL
      SELECT campaign_week_nbr, 30 Metric_Group_SortOrder, 'Engagement' Metric_Group_Name, 90 Metric_Sort_Order, 'Open rate' Metric_Name,'%%' Format_Type, (CASE WHEN campaign_week_nbr = 100 THEN cc.Total_Open*1.00/NULLIF(cc.Total_Deliver,0) else NULL END) AS Open_Rate
      FROM Campaign_Comm cc
      UNION ALL
      SELECT campaign_week_nbr, 30 Metric_Group_SortOrder, 'Engagement' Metric_Group_Name, 100 Metric_Sort_Order, 'Click rate' Metric_Name,'%%' Format_Type, (CASE WHEN campaign_week_nbr = 100 THEN cc.Total_Click*1.00/NULLIF(cc.Total_Open,0) else NULL END) AS Click_Rate
      FROM Campaign_Comm cc
      UNION ALL  
      SELECT campaign_week_nbr, 30 Metric_Group_SortOrder, 'Engagement' Metric_Group_Name, 105 Metric_Sort_Order, 'Unsub Rate (%% of Total Delivered)' Metric_Name, '%%' Format_Type, (CASE WHEN campaign_week_nbr = 100 THEN ((cc.Total_Unsub*1.0000)/cc.Total_Deliver) else NULL END) AS Unsub_Rate_Of_Total_Delivered
      FROM 
      Campaign_Comm cc WHERE campaign_week_nbr = 100  
      UNION ALL  
      SELECT campaign_week_nbr, 30 Metric_Group_SortOrder, 'Engagement' Metric_Group_Name, 105 Metric_Sort_Order, 'Unsub Rate - Valuable Members(%% of Total Delivered)' Metric_Name, '%%' Format_Type, (CASE WHEN campaign_week_nbr = 100 AND cc.Total_Deliver > 100 THEN cc.Val_Unsub_Rate else NULL END) AS Unsub_Rate_val_Of_Total_Delivered
      FROM 
      Campaign_Comm cc WHERE campaign_week_nbr = 100
      UNION ALL
      SELECT campaign_week_nbr, 30 Metric_Group_SortOrder, 'Engagement' Metric_Group_Name, 110 Metric_Sort_Order, 'Activation rate' Metric_Name,'%%' Format_Type, (CASE WHEN campaign_week_nbr = 100 THEN cc.Total_Activate*1.00/NULLIF(cc.Total_Open,0) else NULL END) AS Activate_Rate
      FROM Campaign_Comm cc
      UNION ALL  
      SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Redemption' Metric_Group_Name, 10 Metric_Sort_Order, '# of Members Redeemed (Sent)' Metric_Name, '#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Total_Member_Redeem_Send else NULL END) AS Total_Member_Redeem_Send
      FROM 
      Campaign_Comm cc
      UNION ALL  
      SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Redemption' Metric_Group_Name, 20 Metric_Sort_Order, '# of Baskets Redeemed (Sent)' Metric_Name, '#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Total_Basket_Redeem_Send else NULL END) AS Total_Basket_Redeem_Send
      FROM 
      Campaign_Comm cc
      UNION ALL  
      SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Redemption' Metric_Group_Name, 30 Metric_Sort_Order, '# of Items Redeemed (Sent)' Metric_Name, '#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Total_Item_Redeem_Send else NULL END) AS Total_Item_Redeem_Send
      FROM 
      Campaign_Comm cc
  
      UNION ALL  
      SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Redemption' Metric_Group_Name, 40 Metric_Sort_Order, '# of Members Redeemed (Opened)' Metric_Name, '#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Total_Member_Redeem_Open else NULL END) AS Total_Member_Redeem_Open
      FROM 
      Campaign_Comm cc
      UNION ALL  
      SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Redemption' Metric_Group_Name, 50 Metric_Sort_Order, '# of Baskets Redeemed  (Opened)' Metric_Name, '#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Total_Basket_Redeem_Open else NULL END) AS Total_Basket_Redeem_Open
      FROM 
      Campaign_Comm cc
      UNION ALL  
      SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Redemption' Metric_Group_Name, 60 Metric_Sort_Order, '# of Items Redeemed (Opened)' Metric_Name, '#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Total_Item_Redeem_Open else NULL END) AS Total_Item_Redeem_Open
      FROM 
      Campaign_Comm cc 
  
  
  
      UNION ALL  
      SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Redemption' Metric_Group_Name, 70 Metric_Sort_Order, 'Average hit' Metric_Name, '##' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN (cc.Redeem_1_count + cc.Redeem_2_count * 2 + cc.Redeem_3_count * 3 + cc.Redeem_4_count * 4 + cc.Redeem_5_count * 5 + cc.Redeem_6_count * 6 + cc.Redeem_7_count * 7 + cc.Redeem_8_count * 8 + cc.Redeem_9_count * 9 )*1.000000 / NULLIF(cc.Total_Member_Redeem_Open,0) else NULL END) AS Average_hit
      FROM 
      Campaign_Comm cc 
  
      UNION ALL  
      SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Redemption' Metric_Group_Name, 80 Metric_Sort_Order, '# opened that bought 1 (distinct)' Metric_Name, '#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Redeem_1_count else NULL END) AS Redeem_1_count
      FROM 
      Campaign_Comm cc 
  
  
      UNION ALL  
      SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Redemption' Metric_Group_Name, 90 Metric_Sort_Order, '# opened that bought 2 (distinct)' Metric_Name, '#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Redeem_2_count else NULL END) AS Redeem_2_count
      FROM 
      Campaign_Comm cc 
  
  
      UNION ALL  
      SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Redemption' Metric_Group_Name, 100 Metric_Sort_Order, '# opened that bought 3 (distinct)' Metric_Name, '#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Redeem_3_count else NULL END) AS Redeem_3_count
      FROM 
      Campaign_Comm cc 
  
  
      UNION ALL  
      SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Redemption' Metric_Group_Name, 110 Metric_Sort_Order, '# opened that bought 4 (distinct)' Metric_Name, '#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Redeem_4_count else NULL END) AS Redeem_4_count
      FROM 
      Campaign_Comm cc 
  
  
      UNION ALL  
      SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Redemption' Metric_Group_Name, 120 Metric_Sort_Order, '# opened that bought 5 (distinct)' Metric_Name, '#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Redeem_5_count else NULL END) AS Redeem_5_count
      FROM 
      Campaign_Comm cc 
  
  
      UNION ALL  
      SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Redemption' Metric_Group_Name, 130 Metric_Sort_Order, '# opened that bought 6 (distinct)' Metric_Name, '#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Redeem_6_count else NULL END) AS Redeem_6_count
      FROM 
      Campaign_Comm cc 
  
  
      UNION ALL  
      SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Redemption' Metric_Group_Name, 140 Metric_Sort_Order, '# opened that bought 7 (distinct)' Metric_Name, '#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Redeem_7_count else NULL END) AS Redeem_7_count
      FROM 
      Campaign_Comm cc 
  
  
      UNION ALL  
      SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Redemption' Metric_Group_Name, 150 Metric_Sort_Order, '# opened that bought 8 (distinct)' Metric_Name, '#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Redeem_8_count else NULL END) AS Redeem_8_count
      FROM 
      Campaign_Comm cc 
  
  
      UNION ALL  
      SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Redemption' Metric_Group_Name, 160 Metric_Sort_Order, '# opened that bought 9 (distinct)' Metric_Name, '#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Redeem_9_count else NULL END) AS Redeem_9_count
      FROM 
      Campaign_Comm cc 
  
  
      UNION ALL  
      SELECT campaign_week_nbr, 40 Metric_Group_SortOrder, 'Redemption' Metric_Group_Name, 170 Metric_Sort_Order, 'Number of hits' Metric_Name, '#' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Redeem_1_count + cc.Redeem_2_count * 2 + cc.Redeem_3_count * 3 + cc.Redeem_4_count * 4 + cc.Redeem_5_count * 5 + cc.Redeem_6_count * 6 + cc.Redeem_7_count * 7 + cc.Redeem_8_count * 8 + cc.Redeem_9_count * 9  else NULL END) AS Redeem_1_count
      FROM 
      Campaign_Comm cc 
  
  
      UNION ALL  
      SELECT campaign_week_nbr, 50 Metric_Group_SortOrder, 'Offer Performance' Metric_Group_Name, 10 Metric_Sort_Order, 'Hit rate (%% of Total Delivered)' Metric_Name, '%%' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN (cc.Redeem_1_count + cc.Redeem_2_count * 2 + cc.Redeem_3_count * 3 + cc.Redeem_4_count * 4 + cc.Redeem_5_count * 5 + cc.Redeem_6_count * 6 + cc.Redeem_7_count * 7 + cc.Redeem_8_count * 8 + cc.Redeem_9_count * 9 )*1.000000 / NULLIF(cc.Total_Deliver,0) / NULLIF(coalesce(Redeem_1_count/NULLIF(Redeem_1_count,0),0) + coalesce(Redeem_2_count/NULLIF(Redeem_2_count,0),0) + coalesce(Redeem_3_count/NULLIF(Redeem_3_count,0),0) + coalesce(Redeem_4_count/NULLIF(Redeem_4_count,0),0) + coalesce(Redeem_5_count/NULLIF(Redeem_5_count,0),0) + coalesce(Redeem_6_count/NULLIF(Redeem_6_count,0),0) + coalesce(Redeem_7_count/NULLIF(Redeem_7_count,0),0) + coalesce(Redeem_8_count/NULLIF(Redeem_8_count,0),0) + coalesce(Redeem_9_count/NULLIF(Redeem_9_count,0),0),0) else NULL END) AS Hit_rate_delivered
      FROM 
      Campaign_Comm cc 
  
      UNION ALL  
      SELECT campaign_week_nbr, 50 Metric_Group_SortOrder, 'Offer Performance' Metric_Group_Name, 20 Metric_Sort_Order, 'Hit rate (%% of Opened)' Metric_Name, '%%' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN (cc.Redeem_1_count + cc.Redeem_2_count * 2 + cc.Redeem_3_count * 3 + cc.Redeem_4_count * 4 + cc.Redeem_5_count * 5 + cc.Redeem_6_count * 6 + cc.Redeem_7_count * 7 + cc.Redeem_8_count * 8 + cc.Redeem_9_count * 9 )*1.000000 / NULLIF(cc.Total_open,0) / NULLIF(coalesce(Redeem_1_count/NULLIF(Redeem_1_count,0),0) + coalesce(Redeem_2_count/NULLIF(Redeem_2_count,0),0) + coalesce(Redeem_3_count/NULLIF(Redeem_3_count,0),0) + coalesce(Redeem_4_count/NULLIF(Redeem_4_count,0),0) + coalesce(Redeem_5_count/NULLIF(Redeem_5_count,0),0) + coalesce(Redeem_6_count/NULLIF(Redeem_6_count,0),0) + coalesce(Redeem_7_count/NULLIF(Redeem_7_count,0),0) + coalesce(Redeem_8_count/NULLIF(Redeem_8_count,0),0) + coalesce(Redeem_9_count/NULLIF(Redeem_9_count,0),0),0) else NULL END) AS Hit_rate_opened
      FROM 
      Campaign_Comm cc 
  
  
      UNION ALL  
      SELECT campaign_week_nbr, 50 Metric_Group_SortOrder, 'Offer Performance' Metric_Group_Name, 30 Metric_Sort_Order, 'Redemption rate (%% of Total Delivered)' Metric_Name, '%%' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Total_Member_Redeem_Send*1.000000/ NULLIF(cc.Total_Deliver,0) else NULL END) AS Total_Member_Redeem_Send
      FROM 
      Campaign_Comm cc
  
      UNION ALL  
      SELECT campaign_week_nbr, 50 Metric_Group_SortOrder, 'Offer Performance' Metric_Group_Name, 40 Metric_Sort_Order, 'Redemption rate (%% of Opened)' Metric_Name, '%%' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Total_Member_Redeem_Open*1.000000/ cc.Total_Open else NULL END) AS Total_Member_Redeem_Send
      FROM 
      Campaign_Comm cc
  
      
      UNION ALL
      SELECT campaign_week_nbr, 60 Metric_Group_SortOrder, 'Campaign Returns' Metric_Group_Name, 10 Metric_Sort_Order, 'Cost excluding GST' Metric_Name,'$' Format_Type, (CASE WHEN campaign_week_nbr <= 100 THEN cc.Total_Cost else NULL END) AS Cost
      FROM Campaign_Comm cc    
      
  
      UNION ALL
      SELECT campaign_week_nbr, 60 Metric_Group_SortOrder, 'Campaign Returns' Metric_Group_Name, 15 Metric_Sort_Order, 'Incremental sales target vs control' Metric_Name,'$' Format_Type, 
       CASE WHEN cc.representative_status = 0
      THEN
	  (CASE 
      --WHEN campaign_week_nbr <= 100 THEN (Promo_Avg_Target_Spend - Promo_Avg_Control_Spend)*cc.Target_Count*no_weeks
      WHEN campaign_week_nbr < 100 THEN (Promo_Avg_Target_Spend - Promo_Avg_Control_Spend)*cc.Target_Count
      WHEN campaign_week_nbr = 100 THEN (Promo_Avg_Target_Spend - Promo_Avg_Control_Spend)*cc.Target_Count*no_weeks
      WHEN campaign_week_nbr = 101 THEN (post_Avg_Target_Spend - post_Avg_Control_Spend)*cc.Target_Count*post_campaign_weeks
      else NULL
      END) 
	  WHEN cc.representative_status = 1
      THEN
      (CASE 
      WHEN campaign_week_nbr < 100 THEN ((Promo_Avg_Target_Spend - Promo_Avg_Control_Spend) - (l4w_avg_target_spend - l4w_avg_control_spend))*cc.Target_Count
      WHEN campaign_week_nbr = 100 THEN ((Promo_Avg_Target_Spend - Promo_Avg_Control_Spend) - (l4w_avg_target_spend - l4w_avg_control_spend))*cc.Target_Count*no_weeks
      WHEN campaign_week_nbr = 101 THEN decode(cc.control_count,0,0,((Post_Avg_Target_Spend - Post_Avg_Control_Spend)- (l4w_avg_target_spend - l4w_avg_control_spend))*cc.Target_Count*post_campaign_weeks)
      else NULL
      END)
	  END AS Inc_Sales
      FROM 
      Campaign_Comm cc
  
      UNION ALL
      SELECT campaign_week_nbr, 60 Metric_Group_SortOrder, 'Campaign Returns' Metric_Group_Name, 40 Metric_Sort_Order, 'Incremental sales open vs control' Metric_Name,'$' Format_Type, 
      (CASE 
      WHEN campaign_week_nbr < 100 THEN (Promo_Avg_Open_Spend - Promo_Avg_Control_Spend)*cc.Total_Open
      WHEN campaign_week_nbr = 100 THEN (Promo_Avg_Open_Spend - Promo_Avg_Control_Spend)*cc.Total_Open*no_weeks
      WHEN campaign_week_nbr = 101 THEN (post_Avg_Open_Spend - post_Avg_Control_Spend)*cc.Total_Open*post_campaign_weeks
      else NULL
      END) AS Inc_Sales
      FROM 
      Campaign_Comm cc
  
      UNION ALL
      SELECT campaign_week_nbr, 70 Metric_Group_SortOrder, 'Campaign Uplift' Metric_Group_Name, 10 Metric_Sort_Order, 'Sales uplift Targeted Current vs Past' Metric_Name,'$' Format_Type, 
      (CASE 
      WHEN campaign_week_nbr = 102 THEN (Promo_Avg_Target_Spend - L4W_Avg_Target_Spend)*cc.Target_Count*no_weeks
      WHEN campaign_week_nbr = 103 THEN (Promo_Avg_Target_Spend - L8W_Avg_Target_Spend)*cc.Target_Count*no_weeks
      WHEN campaign_week_nbr = 104 THEN (Promo_Avg_Target_Spend - SPLY_Avg_Target_Spend)*cc.Target_Count*no_weeks
      else NULL
      END) AS Sales_Uplift_t_promo_vs_past
      FROM Campaign_Comm cc
  
      UNION ALL
      SELECT campaign_week_nbr, 70 Metric_Group_SortOrder, 'Campaign Uplift' Metric_Group_Name, 20 Metric_Sort_Order, 'Sales uplift Targeted Post vs Past' Metric_Name,'$' Format_Type, 
      (CASE 
      WHEN campaign_week_nbr = 102 THEN (post_Avg_Target_Spend - L4W_Avg_Target_Spend)*cc.Target_Count*post_campaign_weeks
      WHEN campaign_week_nbr = 103 THEN (post_Avg_Target_Spend - L8W_Avg_Target_Spend)*cc.Target_Count*post_campaign_weeks
      WHEN campaign_week_nbr = 104 THEN (post_Avg_Target_Spend - SPLY_Avg_Target_Spend)*cc.Target_Count*post_campaign_weeks
      else NULL
      END) AS Sales_Uplift_t_post_vs_past
      FROM Campaign_Comm cc 
  
      UNION ALL
      SELECT campaign_week_nbr, 70 Metric_Group_SortOrder, 'Campaign Uplift' Metric_Group_Name, 30 Metric_Sort_Order, 'Sales uplift Redeemed (Sent) Current vs Past' Metric_Name,'$' Format_Type, 
      (CASE 
      WHEN campaign_week_nbr = 102 THEN (Promo_Avg_Redeem_Send_Spend - L4W_Avg_Redeem_Send_Spend)*cc.Total_Member_Redeem_Send*no_weeks
      WHEN campaign_week_nbr = 103 THEN (Promo_Avg_Redeem_Send_Spend - L8W_Avg_Redeem_Send_Spend)*cc.Total_Member_Redeem_Send*no_weeks
      WHEN campaign_week_nbr = 104 THEN (Promo_Avg_Redeem_Send_Spend - SPLY_Avg_Redeem_Send_Spend)*cc.Total_Member_Redeem_Send*no_weeks
      else NULL
      END) AS Sales_Uplift_r_promo_vs_past
      FROM Campaign_Comm cc 
  
      UNION ALL
      SELECT campaign_week_nbr, 70 Metric_Group_SortOrder, 'Campaign Uplift' Metric_Group_Name, 40 Metric_Sort_Order, 'Sales uplift Redeemed (Sent) Post vs Past' Metric_Name,'$' Format_Type, 
      (CASE 
      WHEN campaign_week_nbr = 102 THEN (post_Avg_Redeem_Send_Spend - L4W_Avg_Redeem_Send_Spend)*cc.Total_Member_Redeem_Send*post_campaign_weeks
      WHEN campaign_week_nbr = 103 THEN (post_Avg_Redeem_Send_Spend - L8W_Avg_Redeem_Send_Spend)*cc.Total_Member_Redeem_Send*post_campaign_weeks
      WHEN campaign_week_nbr = 104 THEN (post_Avg_Redeem_Send_Spend - SPLY_Avg_Redeem_Send_Spend)*cc.Total_Member_Redeem_Send*post_campaign_weeks
      else NULL
      END) AS Sales_Uplift_r_promo_vs_past
      FROM Campaign_Comm cc 
  
      UNION ALL
      SELECT campaign_week_nbr, 80 Metric_Group_SortOrder, 'Campaign Return Metrics - Key, During and Post Offer Period' Metric_Group_Name, 10 Metric_Sort_Order, 'Total Incremental Sales (Promo + Next Shop)' Metric_Name,'$' Format_Type, 
      CASE WHEN cc.representative_status = 0
      THEN
      (CASE 
      WHEN campaign_week_nbr <= 100 THEN (Promo_Avg_Target_Spend - Promo_Avg_Control_Spend)*cc.Target_Count*no_weeks + (Post_Avg_Target_Spend - Post_Avg_Control_Spend)*cc.Target_Count*post_campaign_weeks
      else NULL
      END) 
      WHEN cc.representative_status = 1
      THEN
      (CASE 
      WHEN campaign_week_nbr = 100 THEN ((Promo_Avg_Target_Spend - Promo_Avg_Control_Spend) - (l4w_avg_target_spend - l4w_avg_control_spend))*cc.Target_Count*no_weeks + ((Post_Avg_Target_Spend - Post_Avg_Control_Spend) - (l4w_avg_target_spend - l4w_avg_control_spend))*cc.Target_Count*post_campaign_weeks
      else NULL
      END)
      END AS Inc_Sales
      FROM Campaign_Comm cc
      
      UNION ALL
      SELECT campaign_week_nbr, 80 Metric_Group_SortOrder, 'Campaign Return Metrics - Key, During and Post Offer Period' Metric_Group_Name, 15 Metric_Sort_Order, 'Total SCR (target)' Metric_Name,'##' Format_Type, 
      CASE WHEN cc.representative_status = 0
      THEN
      (CASE 
      WHEN campaign_week_nbr = 100 THEN ((Promo_Avg_Target_Spend - Promo_Avg_Control_Spend)*cc.Target_Count*no_weeks + (Post_Avg_Target_Spend - Post_Avg_Control_Spend)*cc.Target_Count*post_campaign_weeks) / NULLIF(cc.Total_Cost,0)
      else NULL
      END)
      WHEN cc.representative_status = 1
      THEN
      (CASE 
      WHEN campaign_week_nbr = 100 THEN (((Promo_Avg_Target_Spend - Promo_Avg_Control_Spend) - (l4w_avg_target_spend - l4w_avg_control_spend))*cc.Target_Count*no_weeks + ((Post_Avg_Target_Spend - Post_Avg_Control_Spend) - (l4w_avg_target_spend - l4w_avg_control_spend))*cc.Target_Count*post_campaign_weeks) / NULLIF(cc.Total_Cost,0)
      else NULL
      END)      
      END AS scr_target
      FROM Campaign_Comm cc    
  
      UNION ALL
      SELECT campaign_week_nbr, 80 Metric_Group_SortOrder, 'Campaign Return Metrics - Key, During and Post Offer Period' Metric_Group_Name, 20 Metric_Sort_Order, 'Incremental sales / contact' Metric_Name,'$' Format_Type, 
      CASE WHEN representative_status = 0
      THEN
      CASE WHEN campaign_week_nbr <= 100 THEN (((Promo_Avg_Target_Spend * no_weeks ) / (no_weeks ) - (Promo_Avg_Control_Spend * no_weeks ) / (no_weeks ))*cc.Target_Count) * (no_weeks ) / NULLIF(cc.Total_Deliver,0)
      END
      WHEN representative_status = 1 
      THEN
      CASE WHEN campaign_week_nbr <= 100 THEN ((((Promo_Avg_Target_Spend * no_weeks ) / (no_weeks ) - (Promo_Avg_Control_Spend * no_weeks ) / (no_weeks ))*cc.Target_Count) - (l4w_avg_target_spend - l4w_avg_control_spend)*cc.Target_Count) * (no_weeks ) / NULLIF(cc.Total_Deliver,0)
      END
      END  Inc_Sales_per_contact
      FROM Campaign_Comm cc 
  
  
      UNION ALL
      SELECT campaign_week_nbr, 80 Metric_Group_SortOrder, 'Campaign Return Metrics - Key, During and Post Offer Period' Metric_Group_Name, 30 Metric_Sort_Order, 'Total Spend Uplift for Redeemers' Metric_Name,'$' Format_Type, 
      (CASE 
      WHEN campaign_week_nbr = 102 THEN Promo_Avg_Redeem_send_Spend - L4W_Avg_Redeem_send_Spend
      WHEN campaign_week_nbr = 103 THEN Promo_Avg_Redeem_send_Spend - L8W_Avg_Redeem_send_Spend
      WHEN campaign_week_nbr = 104 THEN Promo_Avg_Redeem_send_Spend - SPLY_Avg_Redeem_send_Spend
      else NULL
      END) AS implied_scr
      FROM Campaign_Comm cc
      
      UNION ALL
      SELECT campaign_week_nbr, 80 Metric_Group_SortOrder, 'Campaign Return Metrics - Key, During and Post Offer Period' Metric_Group_Name, 40 Metric_Sort_Order, 'Total Sales uplift (Redeemers)' Metric_Name,'$' Format_Type, 
      (CASE 
      WHEN campaign_week_nbr = 102 THEN ((Promo_Avg_Redeem_send_Spend - L4W_Avg_Redeem_send_Spend)*cc.total_member_redeem_send*no_weeks + (Post_Avg_Redeem_send_Spend - L4W_Avg_Redeem_send_Spend)*cc.total_member_redeem_send*post_campaign_weeks) 
      WHEN campaign_week_nbr = 103 THEN ((Promo_Avg_Redeem_send_Spend - L8W_Avg_Redeem_send_Spend)*cc.total_member_redeem_send*no_weeks + (Post_Avg_Redeem_send_Spend - L8W_Avg_Redeem_send_Spend)*cc.total_member_redeem_send*post_campaign_weeks) 
      WHEN campaign_week_nbr = 104 THEN ((Promo_Avg_Redeem_send_Spend - SPLY_Avg_Redeem_send_Spend)*cc.total_member_redeem_send*no_weeks + (Post_Avg_Redeem_send_Spend - SPLY_Avg_Redeem_send_Spend)*cc.total_member_redeem_send*post_campaign_weeks) 
      else NULL
      END) AS implied_scr
      FROM Campaign_Comm cc    
      
      UNION ALL
      SELECT campaign_week_nbr, 80 Metric_Group_SortOrder, 'Campaign Return Metrics - Key, During and Post Offer Period' Metric_Group_Name, 50 Metric_Sort_Order, 'Implied SCR' Metric_Name,'##' Format_Type, 
      (CASE 
      WHEN campaign_week_nbr = 102 THEN ((Promo_Avg_Redeem_send_Spend - L4W_Avg_Redeem_send_Spend)*cc.total_member_redeem_send*no_weeks + (Post_Avg_Redeem_send_Spend - L4W_Avg_Redeem_send_Spend)*cc.total_member_redeem_send*post_campaign_weeks) / cc.Total_Cost
      WHEN campaign_week_nbr = 103 THEN ((Promo_Avg_Redeem_send_Spend - L8W_Avg_Redeem_send_Spend)*cc.total_member_redeem_send*no_weeks + (Post_Avg_Redeem_send_Spend - L8W_Avg_Redeem_send_Spend)*cc.total_member_redeem_send*post_campaign_weeks) / cc.Total_Cost
      WHEN campaign_week_nbr = 104 THEN ((Promo_Avg_Redeem_send_Spend - SPLY_Avg_Redeem_send_Spend)*cc.total_member_redeem_send*no_weeks + (Post_Avg_Redeem_send_Spend - SPLY_Avg_Redeem_send_Spend)*cc.total_member_redeem_send*post_campaign_weeks) / cc.Total_Cost
      else NULL
      END) AS implied_scr
      FROM Campaign_Comm cc    
      
      
  
  
      UNION ALL
      SELECT campaign_week_nbr, 90 Metric_Group_SortOrder, 'Other Key Metrics' Metric_Group_Name, 10 Metric_Sort_Order, 'Average Spend / Target Member' Metric_Name,'$' Format_Type, 
      (CASE 
      WHEN campaign_week_nbr <= 100 THEN Promo_Avg_Target_Spend 
      WHEN campaign_week_nbr = 101 THEN Post_Avg_Target_Spend 
      WHEN campaign_week_nbr = 102 THEN L4W_Avg_Target_Spend 
      WHEN campaign_week_nbr = 103 THEN L8W_Avg_Target_Spend 
      WHEN campaign_week_nbr = 104 THEN SPLY_Avg_Target_Spend 
      else NULL
      END) AS avg_target_spend 
      FROM Campaign_Comm cc
  
      UNION ALL
      SELECT campaign_week_nbr, 90 Metric_Group_SortOrder, 'Other Key Metrics' Metric_Group_Name, 20 Metric_Sort_Order, 'Average Spend / # of Emails Opened' Metric_Name,'$' Format_Type, 
      (CASE 
      WHEN campaign_week_nbr <= 100 THEN Promo_Avg_open_Spend 
      WHEN campaign_week_nbr = 101 THEN Post_Avg_open_Spend 
      WHEN campaign_week_nbr = 102 THEN L4W_Avg_open_Spend 
      WHEN campaign_week_nbr = 103 THEN L8W_Avg_open_Spend 
      WHEN campaign_week_nbr = 104 THEN SPLY_Avg_open_Spend 
      else NULL
      END) AS avg_open_spend 
      FROM Campaign_Comm cc
  
      UNION ALL
      SELECT campaign_week_nbr, 90 Metric_Group_SortOrder, 'Other Key Metrics' Metric_Group_Name, 25 Metric_Sort_Order, 'Average Spend / # of Emails Activated' Metric_Name,'$' Format_Type, 
      (CASE 
      WHEN campaign_week_nbr <= 100 THEN Promo_Avg_activate_Spend 
      WHEN campaign_week_nbr = 101 THEN Post_Avg_activate_Spend 
      WHEN campaign_week_nbr = 102 THEN L4W_Avg_activate_Spend 
      WHEN campaign_week_nbr = 103 THEN L8W_Avg_activate_Spend 
      WHEN campaign_week_nbr = 104 THEN SPLY_Avg_activate_Spend 
      else NULL
      END) AS avg_activate_spend 
      FROM Campaign_Comm cc
  
  
      UNION ALL
      SELECT campaign_week_nbr, 90 Metric_Group_SortOrder, 'Other Key Metrics' Metric_Group_Name, 30 Metric_Sort_Order, 'Average Spend / Redeemed (Sent) Member' Metric_Name,'$' Format_Type, 
      (CASE 
      WHEN campaign_week_nbr <= 100 THEN Promo_Avg_redeem_send_Spend 
      WHEN campaign_week_nbr = 101 THEN Post_Avg_redeem_send_Spend 
      WHEN campaign_week_nbr = 102 THEN L4W_Avg_redeem_send_Spend 
      WHEN campaign_week_nbr = 103 THEN L8W_Avg_redeem_send_Spend 
      WHEN campaign_week_nbr = 104 THEN SPLY_Avg_redeem_send_Spend 
      else NULL
      END) AS avg_redeem_spend 
      FROM Campaign_Comm cc
  
      UNION ALL
      SELECT campaign_week_nbr, 90 Metric_Group_SortOrder, 'Other Key Metrics' Metric_Group_Name, 40 Metric_Sort_Order, 'Average Spend / Redeemed (Opened) Member' Metric_Name,'$' Format_Type, 
      (CASE 
      WHEN campaign_week_nbr <= 100 THEN Promo_Avg_redeem_open_Spend 
      WHEN campaign_week_nbr = 101 THEN Post_Avg_redeem_open_Spend 
      WHEN campaign_week_nbr = 102 THEN L4W_Avg_redeem_open_Spend 
      WHEN campaign_week_nbr = 103 THEN L8W_Avg_redeem_open_Spend 
      WHEN campaign_week_nbr = 104 THEN SPLY_Avg_redeem_open_Spend 
      else NULL
      END) AS avg_redeem_spend 
      FROM Campaign_Comm cc
  
      UNION ALL
      SELECT campaign_week_nbr, 90 Metric_Group_SortOrder, 'Other Key Metrics' Metric_Group_Name, 50 Metric_Sort_Order, 'Average spend / Control customer' Metric_Name,'$' Format_Type, 
      (CASE 
      WHEN campaign_week_nbr <= 100 THEN Promo_Avg_control_Spend 
      WHEN campaign_week_nbr = 101 THEN Post_Avg_control_Spend 
      WHEN campaign_week_nbr = 102 THEN L4W_Avg_control_Spend 
      WHEN campaign_week_nbr = 103 THEN L8W_Avg_control_Spend 
      WHEN campaign_week_nbr = 104 THEN SPLY_Avg_control_Spend 
      else NULL
      END) AS avg_control_spend 
      FROM Campaign_Comm cc
  
      UNION ALL
      SELECT campaign_week_nbr, 90 Metric_Group_SortOrder, 'Other Key Metrics' Metric_Group_Name, 60 Metric_Sort_Order, 'Average # of Weekly Transactions (Campaign Period)' Metric_Name,'##' Format_Type, 
      (CASE 
      WHEN campaign_week_nbr <= 100 THEN basket_count_promo 
      WHEN campaign_week_nbr = 101 THEN basket_count_post
      WHEN campaign_week_nbr = 102 THEN basket_count_l4w 
      WHEN campaign_week_nbr = 103 THEN basket_count_l8w
      WHEN campaign_week_nbr = 104 THEN basket_count_sply
      else NULL
      END) AS avg_control_spend 
      FROM Campaign_Comm cc 
  
  
      UNION ALL
      SELECT campaign_week_nbr, 90 Metric_Group_SortOrder, 'Other Key Metrics' Metric_Group_Name, 150 Metric_Sort_Order, 'Total Basket Count' Metric_Name,'#' Format_Type, 
      (CASE 
      WHEN campaign_week_nbr <= 100 THEN basket_count_promo 
      WHEN campaign_week_nbr = 101 THEN basket_count_post 
      WHEN campaign_week_nbr = 102 THEN basket_count_l4w
      WHEN campaign_week_nbr = 103 THEN basket_count_l8w
      else NULL
      END) AS avg_control_spend 
      FROM Campaign_Comm cc
  
  )
  SELECT DISTINCT
    cd.Period_Description
    , cd.Period_Sort_Order
    , cd.Campaign_Code
    , cd.Campaign_Name
    , cd.Campaign_Start_Date
    , cd.Campaign_Desc
    , cd.Campaign_Objective
    , cd.Campaign_Duration
    , cd.Post_Campaign_Weeks
    , cd.Report_Type
    , cd.Promotion_Period
    , mt.Metric_Group_SortOrder
    , mt.Metric_Group_Name
    , mt.Metric_Sort_Order
    , mt.Metric_Name
    , 
      CASE 
      WHEN mt.campaign_week_nbr = 100 THEN 'Total' 
      WHEN mt.campaign_week_nbr = 101 THEN 'Post Shop' 
      WHEN mt.campaign_week_nbr = 102 THEN 'L4W' 
      WHEN mt.campaign_week_nbr = 103 THEN 'L8W' 
      WHEN mt.campaign_week_nbr = 104 THEN 'Last Year' 
      else 'Week ' + cast(mt.campaign_week_nbr AS varchar) 
      END AS campaign_week_nbr
    , cast(mt.campaign_week_nbr AS int) AS week_nbr_sort_order
    , 
      CASE 
      WHEN mt.campaign_week_nbr = 100 THEN promo_start_date || ' - ' || promo_end_date 
      --WHEN mt.campaign_week_nbr = 101 THEN promo_end_date + 1 || ' - ' || promo_end_date + Post_Campaign_Weeks * 7
      WHEN mt.campaign_week_nbr = 101 THEN		
      to_char(DATEADD(day,7*(no_weeks-1) + 7 ,Campaign_Start_Date) ,'dd-mm-yyyy') || ' - ' || to_char(
      case when 
      DATEADD(day,7*(no_weeks-1) + 6 + 7 * Post_Campaign_Weeks ,Campaign_Start_Date)  < DATEADD(day,7*(no_weeks-1) + 7 ,Campaign_Start_Date)
      then DATEADD(day,7*(no_weeks-1) + 7 ,Campaign_Start_Date)
      else DATEADD(day,7*(no_weeks-1) + 6 + 7 * Post_Campaign_Weeks ,Campaign_Start_Date) end
      ,'dd-mm-yyyy'
      )      
      WHEN mt.campaign_week_nbr = 102 THEN promo_start_date - 7 * 4 || ' - ' || promo_start_date - 1
      WHEN mt.campaign_week_nbr = 103 THEN promo_start_date - 7 * 8 || ' - ' || promo_start_date - 1 
      WHEN mt.campaign_week_nbr = 104 THEN promo_start_date - 364 || ' - ' || promo_end_date - 364
      else promo_start_date + (mt.campaign_week_nbr - 1) * 7 || ' - ' || promo_start_date + (mt.campaign_week_nbr ) * 7 - 1
      END AS column_period
    ,
    CASE 
      WHEN mt.format_type='##' THEN to_char(mt.Value, 'FM999,999,999,990D00')
      WHEN mt.format_type='#' THEN to_char(mt.Value, 'FM999,999,999,990')
      WHEN mt.format_type='$' THEN to_char(mt.Value, 'FM$999,999,999,990D00')
      WHEN mt.format_type='%%' THEN to_char(mt.Value*100, 'FM999,999,999,990D00')||' %%' 
      WHEN mt.format_type='%%%%' THEN to_char(mt.Value*100, 'FM999,999,999,990D0000')||' %%' 
      else to_char(mt.Value, 'FM999,999,999,990D00')
    END AS Value
    , cd.note
  
  FROM
  mt
  
  CROSS JOIN 
  Campaign_details cd
  WHERE 
  (
      (metric_name LIKE '# opened that bought %%'
      AND metric_sort_order <= (no_product_groups + 7) * 10)
      OR metric_name NOT LIKE '# opened that bought %%'
  ) AND
  mt.campaign_week_nbr >= (case when cd.no_weeks = 1 then 100 else 0 end)
  
 
 
 
 


  
cdabcc.sql.graph01:
  /*Firstly remove existing records*/
  DELETE FROM loyalty_bi_analytics.fact_campaign_weekly_spend_graph
  WHERE campaign_name = 
  (
  SELECT DISTINCT campaign_name || ' ' || period_description AS campaign_name
  FROM loyalty_bi_analytics.dim_campaign
  --WHERE campaign_code = 'OSP-0005' AND campaign_start_date = '2016-12-16 00:00:00'
  WHERE dim_campaign.campaign_code = %s AND dim_campaign.campaign_start_date = %s
  )

cdabcc.sql.graph02:
  INSERT INTO loyalty_bi_analytics.fact_campaign_weekly_spend_graph
  
  With 
  params AS
  (
  SELECT DISTINCT campaign_name || ' ' || period_description AS campaign_name
  , cast( least(greatest(floor(date_diff('day',campaign_start_date,getdate())*1.0 / 7 )  - campaign_duration_weeks ,1) ,post_campaign_weeks) as int) as post_campaign_weeks
  , campaign_duration_weeks AS no_weeks
  , period_description
  FROM loyalty_bi_analytics.dim_campaign
  --WHERE campaign_code = 'OSP-0005' AND campaign_start_date = '2016-12-16 00:00:00'
  WHERE dim_campaign.campaign_code = %s AND dim_campaign.campaign_start_date = %s
  ),
  AGGRE as
  (
  SELECT fcs.campaign_name, period_description
  , (CASE WHEN campaign_audience_type = 'T' THEN 'Target' else 'Control' END)::varchar(50) Customer_Group
  , count(DISTINCT crn)*1.0 AS Customer_Group_count
  , sum(case when fcs.campaign_week_nbr = 1 then tot_amt_excld_gst_promo end ) as w1
  , sum(case when fcs.campaign_week_nbr = 2 then tot_amt_excld_gst_promo end ) as w2
  , sum(case when fcs.campaign_week_nbr = 3 then tot_amt_excld_gst_promo end ) as w3
  , sum(case when fcs.campaign_week_nbr = 4 then tot_amt_excld_gst_promo end ) as w4
  , sum(tot_amt_excld_gst_pre1) as pre1
  , sum(tot_amt_excld_gst_pre2) as pre2
  , sum(tot_amt_excld_gst_pre3) as pre3
  , sum(tot_amt_excld_gst_pre4) as pre4
  , sum(tot_amt_excld_gst_pre5) as pre5
  , sum(tot_amt_excld_gst_pre6) as pre6
  , sum(tot_amt_excld_gst_pre7) as pre7
  , sum(tot_amt_excld_gst_pre8) as pre8
  , sum(tot_amt_excld_gst_post1) as post1
  , sum(tot_amt_excld_gst_post2) as post2
  , sum(tot_amt_excld_gst_post3) as post3
  , sum(tot_amt_excld_gst_post4) as post4
  , sum(tot_amt_excld_gst_post5) as post5
  , sum(tot_amt_excld_gst_post6) as post6
  , sum(tot_amt_excld_gst_post7) as post7
  , sum(tot_amt_excld_gst_post8) as post8
  , sum(tot_amt_excld_gst_post9) as post9
  , sum(tot_amt_excld_gst_post10) as post10
  , sum(tot_amt_excld_gst_post11) as post11
  , sum(tot_amt_excld_gst_post12) as post12
  FROM 
  loyalty_bi_analytics.fact_campaign_sales_solus fcs 
  CROSS JOIN params
  WHERE
  fcs.campaign_name=params.campaign_name
  group by 1,2,3
  )
  
  SELECT AGGRE.campaign_name
  , Customer_Group
  , 'Week 1' AS campaign_week_nbr
  , 1 AS sort_order
  , w1/Customer_Group_count as average
  , AGGRE.period_description
  FROM AGGRE 
  inner join params
  on 1 <= params.no_weeks
  
  UNION ALL
  
  SELECT AGGRE.campaign_name
  , Customer_Group
  , 'Week 2' AS campaign_week_nbr
  , 2 AS sort_order
  , w2/Customer_Group_count as average
  , AGGRE.period_description
  FROM AGGRE 
  cross join params
  where 2 <= params.no_weeks  
  
  UNION ALL
  
  
  SELECT AGGRE.campaign_name
  , Customer_Group
  , 'Week 3' AS campaign_week_nbr
  , 3 AS sort_order
  , w3/Customer_Group_count as average
  , AGGRE.period_description
  FROM AGGRE 
  cross join params
  where 3 <= params.no_weeks
  
  UNION ALL
  
  
  SELECT AGGRE.campaign_name
  , Customer_Group
  , 'Week 4' AS campaign_week_nbr
  , 4 AS sort_order
  , w4/Customer_Group_count as average
  , AGGRE.period_description
  FROM AGGRE 
  cross join params
  where 4 <= params.no_weeks
  
  UNION ALL
  
  SELECT campaign_name
  , Customer_Group
  , 'Pre 1' AS campaign_week_nbr
  , -1 AS sort_order
  , pre1/Customer_Group_count as average
  , period_description
  FROM AGGRE 
  
  UNION ALL 
  
  
  SELECT campaign_name
  , Customer_Group
  , 'Pre 2' AS campaign_week_nbr
  , -2 AS sort_order
  , pre2/Customer_Group_count as average
  , period_description
  FROM AGGRE 
  
  UNION ALL 
  
  SELECT campaign_name
  , Customer_Group
  , 'Pre 3' AS campaign_week_nbr
  , -3 AS sort_order
  , pre3/Customer_Group_count as average
  , period_description
  FROM AGGRE 
  
  UNION ALL 
  
  SELECT campaign_name
  , Customer_Group
  , 'Pre 4' AS campaign_week_nbr
  , -4 AS sort_order
  , pre4/Customer_Group_count as average
  , period_description
  FROM AGGRE 
  
  UNION ALL 
  
  SELECT campaign_name
  , Customer_Group
  , 'Pre 5' AS campaign_week_nbr
  , -5 AS sort_order
  , pre5/Customer_Group_count as average
  , period_description
  FROM AGGRE 
  
  UNION ALL 
  
  SELECT campaign_name
  , Customer_Group
  , 'Pre 6' AS campaign_week_nbr
  , -6 AS sort_order
  , pre6/Customer_Group_count as average
  , period_description
  FROM AGGRE 
  
  UNION ALL 
  
  SELECT campaign_name
  , Customer_Group
  , 'Pre 7' AS campaign_week_nbr
  , -7 AS sort_order
  , pre7/Customer_Group_count as average
  , period_description
  FROM AGGRE 
  
  UNION ALL 
  
  SELECT campaign_name
  , Customer_Group
  , 'Pre 8' AS campaign_week_nbr
  , -8 AS sort_order
  , pre8/Customer_Group_count as average
  , period_description
  FROM AGGRE 
  
  UNION ALL 
  
  
  SELECT AGGRE.campaign_name
  , Customer_Group
  , 'Post 1' AS campaign_week_nbr
  , Params.no_weeks + 1 AS sort_order
  , post1/Customer_Group_count as average
  , AGGRE.period_description
  FROM AGGRE 
  cross join Params
  where 1 <= Params.post_campaign_weeks   
  
  UNION ALL 
  
  SELECT AGGRE.campaign_name
  , Customer_Group
  , 'Post 2' AS campaign_week_nbr
  , Params.no_weeks + 2 AS sort_order
  , post2/Customer_Group_count as average
  , AGGRE.period_description
  FROM AGGRE 
  cross join Params
  where 2 <= Params.post_campaign_weeks   
  
  UNION ALL 
  
  SELECT AGGRE.campaign_name
  , Customer_Group
  , 'Post 3' AS campaign_week_nbr
  , Params.no_weeks + 3 AS sort_order
  , post3/Customer_Group_count as average
  , AGGRE.period_description
  FROM AGGRE 
  cross join Params
  where 3 <= Params.post_campaign_weeks   
  
  UNION ALL 
  
  SELECT AGGRE.campaign_name
  , Customer_Group
  , 'Post 4' AS campaign_week_nbr
  , Params.no_weeks + 4 AS sort_order
  , post4/Customer_Group_count as average
  , AGGRE.period_description
  FROM AGGRE 
  cross join Params
  where 4 <= Params.post_campaign_weeks   
  
  UNION ALL 
  
  SELECT AGGRE.campaign_name
  , Customer_Group
  , 'Post 5' AS campaign_week_nbr
  , Params.no_weeks + 5 AS sort_order
  , post5/Customer_Group_count as average
  , AGGRE.period_description
  FROM AGGRE 
  cross join Params
  where 5 <= Params.post_campaign_weeks   
  
  UNION ALL 
  
  SELECT AGGRE.campaign_name
  , Customer_Group
  , 'Post 6' AS campaign_week_nbr
  , Params.no_weeks + 6 AS sort_order
  , post6/Customer_Group_count as average
  , AGGRE.period_description
  FROM AGGRE 
  cross join Params
  where 6 <= Params.post_campaign_weeks   
  
  UNION ALL 
  
  SELECT AGGRE.campaign_name
  , Customer_Group
  , 'Post 7' AS campaign_week_nbr
  , Params.no_weeks + 7 AS sort_order
  , post7/Customer_Group_count as average
  , AGGRE.period_description
  FROM AGGRE 
  cross join Params
  where 7 <= Params.post_campaign_weeks   
  
  UNION ALL 
  
  SELECT AGGRE.campaign_name
  , Customer_Group
  , 'Post 8' AS campaign_week_nbr
  , Params.no_weeks + 8 AS sort_order
  , post8/Customer_Group_count as average
  , AGGRE.period_description
  FROM AGGRE 
  cross join Params
  where 8 <= Params.post_campaign_weeks   
  
  UNION ALL 
  
  SELECT AGGRE.campaign_name
  , Customer_Group
  , 'Post 9' AS campaign_week_nbr
  , Params.no_weeks + 9 AS sort_order
  , post9/Customer_Group_count as average
  , AGGRE.period_description
  FROM AGGRE 
  cross join Params
  where 9 <= Params.post_campaign_weeks   
  
  UNION ALL 
  
  SELECT AGGRE.campaign_name
  , Customer_Group
  , 'Post 10' AS campaign_week_nbr
  , Params.no_weeks + 10 AS sort_order
  , post10/Customer_Group_count as average
  , AGGRE.period_description
  FROM AGGRE 
  cross join Params
  where 10 <= Params.post_campaign_weeks   
  
  UNION ALL 
  
  SELECT AGGRE.campaign_name
  , Customer_Group
  , 'Post 11' AS campaign_week_nbr
  , Params.no_weeks + 11 AS sort_order
  , post11/Customer_Group_count as average
  , AGGRE.period_description
  FROM AGGRE 
  cross join Params
  where 11 <= Params.post_campaign_weeks   
  
  UNION ALL 
  
  SELECT AGGRE.campaign_name
  , Customer_Group
  , 'Post 12' AS campaign_week_nbr
  , Params.no_weeks + 12 AS sort_order
  , post12/Customer_Group_count as average
  , AGGRE.period_description
  FROM AGGRE 
  cross join Params
  where 12 <= Params.post_campaign_weeks   
  
  UNION ALL 
  
  
  
  
  
  SELECT campaign_name
  , 'Incremental Sales' as Customer_Group
  , 'Week 1' AS campaign_week_nbr
  , 1 AS sort_order
  , ((select w1/Customer_Group_count  from AGGRE where Customer_Group = 'Target') - 
    (select w1/Customer_Group_count  from AGGRE where Customer_Group = 'Control')) * (select Customer_Group_count from AGGRE where Customer_Group = 'Target')
  , period_description
  From Params
  where 1 <= Params.no_weeks
  
  UNION ALL
  
  SELECT campaign_name
  , 'Incremental Sales' as Customer_Group
  , 'Week 2' AS campaign_week_nbr
  , 2 AS sort_order
  , ((select w2/Customer_Group_count  from AGGRE where Customer_Group = 'Target') - 
    (select w2/Customer_Group_count  from AGGRE where Customer_Group = 'Control')) * (select Customer_Group_count from AGGRE where Customer_Group = 'Target')
  , period_description
  From Params
  where 2 <= Params.no_weeks    
  
  UNION ALL
  
  SELECT campaign_name
  , 'Incremental Sales' as Customer_Group
  , 'Week 3' AS campaign_week_nbr
  , 3 AS sort_order
  , ((select w3/Customer_Group_count  from AGGRE where Customer_Group = 'Target') - 
    (select w3/Customer_Group_count  from AGGRE where Customer_Group = 'Control')) * (select Customer_Group_count from AGGRE where Customer_Group = 'Target')
  , period_description
  From Params
  where 3 <= Params.no_weeks       
  
  UNION ALL
  
  SELECT campaign_name
  , 'Incremental Sales' as Customer_Group
  , 'Week 4' AS campaign_week_nbr
  , 4 AS sort_order
  , ((select w4/Customer_Group_count  from AGGRE where Customer_Group = 'Target') - 
    (select w4/Customer_Group_count  from AGGRE where Customer_Group = 'Control')) * (select Customer_Group_count from AGGRE where Customer_Group = 'Target')
  , period_description
  From Params
  where 4 <= Params.no_weeks      
  
  UNION ALL
  
  SELECT campaign_name
  , 'Incremental Sales' as Customer_Group
  , 'Post 1' AS campaign_week_nbr
  , Params.no_weeks + 1 AS sort_order
  , ((select post1/Customer_Group_count  from AGGRE where Customer_Group = 'Target') - 
    (select post1/Customer_Group_count  from AGGRE where Customer_Group = 'Control')) * (select Customer_Group_count from AGGRE where Customer_Group = 'Target')
  , period_description
  From Params
  where 1 <= Params.post_campaign_weeks   
  
  UNION ALL
  
  SELECT campaign_name
  , 'Incremental Sales' as Customer_Group
  , 'Post 2' AS campaign_week_nbr
  , Params.no_weeks + 2 AS sort_order
  , ((select post2/Customer_Group_count  from AGGRE where Customer_Group = 'Target') - 
    (select post2/Customer_Group_count  from AGGRE where Customer_Group = 'Control')) * (select Customer_Group_count from AGGRE where Customer_Group = 'Target')
  , period_description
  From Params
  where 2 <= Params.post_campaign_weeks     
  
  UNION ALL
  
  SELECT campaign_name
  , 'Incremental Sales' as Customer_Group
  , 'Post 3' AS campaign_week_nbr
  , Params.no_weeks + 3 AS sort_order
  , ((select post3/Customer_Group_count  from AGGRE where Customer_Group = 'Target') - 
    (select post3/Customer_Group_count  from AGGRE where Customer_Group = 'Control')) * (select Customer_Group_count from AGGRE where Customer_Group = 'Target')
  , period_description
  From Params
  where 3 <= Params.post_campaign_weeks     
  
  UNION ALL
  
  SELECT campaign_name
  , 'Incremental Sales' as Customer_Group
  , 'Post 4' AS campaign_week_nbr
  , Params.no_weeks + 4 AS sort_order
  , ((select post4/Customer_Group_count  from AGGRE where Customer_Group = 'Target') - 
    (select post4/Customer_Group_count  from AGGRE where Customer_Group = 'Control')) * (select Customer_Group_count from AGGRE where Customer_Group = 'Target')
  , period_description
  From Params
  where 4 <= Params.post_campaign_weeks   
  
  UNION ALL
  
  SELECT campaign_name
  , 'Incremental Sales' as Customer_Group
  , 'Post 5' AS campaign_week_nbr
  , Params.no_weeks + 5 AS sort_order
  , ((select post5/Customer_Group_count  from AGGRE where Customer_Group = 'Target') - 
    (select post5/Customer_Group_count  from AGGRE where Customer_Group = 'Control')) * (select Customer_Group_count from AGGRE where Customer_Group = 'Target')
  , period_description
  From Params
  where 5 <= Params.post_campaign_weeks   
  
  UNION ALL
  
  SELECT campaign_name
  , 'Incremental Sales' as Customer_Group
  , 'Post 6' AS campaign_week_nbr
  , Params.no_weeks + 6 AS sort_order
  , ((select post6/Customer_Group_count  from AGGRE where Customer_Group = 'Target') - 
    (select post6/Customer_Group_count  from AGGRE where Customer_Group = 'Control')) * (select Customer_Group_count from AGGRE where Customer_Group = 'Target')
  , period_description
  From Params
  where 6 <= Params.post_campaign_weeks     
  
  
  UNION ALL
  
  SELECT campaign_name
  , 'Incremental Sales' as Customer_Group
  , 'Post 7' AS campaign_week_nbr
  , Params.no_weeks + 7 AS sort_order
  , ((select post7/Customer_Group_count  from AGGRE where Customer_Group = 'Target') - 
    (select post7/Customer_Group_count  from AGGRE where Customer_Group = 'Control')) * (select Customer_Group_count from AGGRE where Customer_Group = 'Target')
  , period_description
  From Params
  where 7 <= Params.post_campaign_weeks     
  
  UNION ALL
  
  SELECT campaign_name
  , 'Incremental Sales' as Customer_Group
  , 'Post 8' AS campaign_week_nbr
  , Params.no_weeks + 8 AS sort_order
  , ((select post8/Customer_Group_count  from AGGRE where Customer_Group = 'Target') - 
    (select post8/Customer_Group_count  from AGGRE where Customer_Group = 'Control')) * (select Customer_Group_count from AGGRE where Customer_Group = 'Target')
  , period_description
  From Params
  where 8 <= Params.post_campaign_weeks   
  
  
  UNION ALL
  
  SELECT campaign_name
  , 'Incremental Sales' as Customer_Group
  , 'Post 9' AS campaign_week_nbr
  , Params.no_weeks + 9 AS sort_order
  , ((select post9/Customer_Group_count  from AGGRE where Customer_Group = 'Target') - 
    (select post9/Customer_Group_count  from AGGRE where Customer_Group = 'Control')) * (select Customer_Group_count from AGGRE where Customer_Group = 'Target')
  , period_description
  From Params
  where 9 <= Params.post_campaign_weeks      
  
  UNION ALL
  
  SELECT campaign_name
  , 'Incremental Sales' as Customer_Group
  , 'Post 10' AS campaign_week_nbr
  , Params.no_weeks + 10 AS sort_order
  , ((select post10/Customer_Group_count  from AGGRE where Customer_Group = 'Target') - 
    (select post10/Customer_Group_count  from AGGRE where Customer_Group = 'Control')) * (select Customer_Group_count from AGGRE where Customer_Group = 'Target')
  , period_description
  From Params
  where 10 <= Params.post_campaign_weeks       
  
  UNION ALL
  
  SELECT campaign_name
  , 'Incremental Sales' as Customer_Group
  , 'Post 11' AS campaign_week_nbr
  , Params.no_weeks + 11 AS sort_order
  , ((select post11/Customer_Group_count  from AGGRE where Customer_Group = 'Target') - 
    (select post11/Customer_Group_count  from AGGRE where Customer_Group = 'Control')) * (select Customer_Group_count from AGGRE where Customer_Group = 'Target')
  , period_description
  From Params
  where 11 <= Params.post_campaign_weeks 
  
  UNION ALL
  
  SELECT campaign_name
  , 'Incremental Sales' as Customer_Group
  , 'Post 12' AS campaign_week_nbr
  , Params.no_weeks + 12 AS sort_order
  , ((select post12/Customer_Group_count  from AGGRE where Customer_Group = 'Target') - 
    (select post12/Customer_Group_count  from AGGRE where Customer_Group = 'Control')) * (select Customer_Group_count from AGGRE where Customer_Group = 'Target')
  , period_description
  From Params
  where 12 <= Params.post_campaign_weeks 


  
  
cdabcc.sql.ctlrep01:
  DELETE FROM loyalty_bi_analytics.fact_Campaign_Control_Representative
  WHERE campaign_name = 
  (
      SELECT DISTINCT campaign_name || ' ' || period_description AS campaign_name
      FROM loyalty_bi_analytics.dim_campaign
      --WHERE campaign_code = 'OSP-0005' AND campaign_start_date = '2016-12-16 00:00:00'
      WHERE dim_campaign.campaign_code = %s AND dim_campaign.campaign_start_date = %s
  )


cdabcc.sql.ctlrep02:
  INSERT INTO loyalty_bi_analytics.fact_Campaign_Control_Representative
  With 
  PARAM AS
  (
      SELECT DISTINCT campaign_name || ' ' || period_description AS campaign_name
      , period_description
      FROM loyalty_bi_analytics.dim_campaign
      WHERE campaign_code = %s AND campaign_start_date = %s
  ), 
  Result AS 
  (
      SELECT fcs.campaign_name, 1 metric_sort_order, 'Control' Metric_Name, 1 column_sort_order, 'Promo Period' Column_Name,NULL L4W_Rep_Status, NULL L8W_Rep_Status,
      to_char((sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_promo*1.0 else 0 END)/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)/count(DISTINCT fcs.campaign_week_nbr),'$ FM999,999,999,990D00') Column_Value
      ,NULL l4w_dollar_diff,NULL l8w_dollar_diff,NULL target_avg_spend_l4w,NULL control_avg_spend_l4w,NULL target_avg_spend_l8w,NULL control_avg_spend_l8w
      FROM 
      loyalty_bi_analytics.fact_campaign_sales_solus fcs 
      JOIN PARAM p ON fcs.Campaign_Name =p.campaign_name 
      GROUP BY 1
      
      UNION ALL
      SELECT fcs.campaign_name,2 metric_sort_order, 'Target' Metric_Name,1 column_sort_order,  'Promo Period' Column_Name, NULL L4W_Rep_Status, NULL L8W_Rep_Status,
      to_char((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_promo*1.0 else 0 END)/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0)/count(DISTINCT fcs.campaign_week_nbr),'$ FM999,999,999,990D00') Column_Value
      ,NULL l4w_dollar_diff,NULL l8w_dollar_diff,NULL target_avg_spend_l4w,NULL control_avg_spend_l4w,NULL target_avg_spend_l8w,NULL control_avg_spend_l8w
      FROM
      loyalty_bi_analytics.fact_campaign_sales_solus fcs 
      JOIN PARAM p ON fcs.Campaign_Name =p.campaign_name 
      GROUP BY 1
      
      UNION ALL
      SELECT fcs.campaign_name,1 metric_sort_order, 'Control' Metric_Name,2 column_sort_order,  'L4W' Column_Name,
      ((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) /
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)  -1 )*100 L4W_Rep_Status, 
      ((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) /
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)-1)*100 L8W_Rep_Status,
      to_char((sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0),'$ FM999,999,999,990D00')  Column_Value
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) -
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0) l4w_dollar_diff
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) -
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0) l8w_dollar_diff
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) target_avg_spend_l4w
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END))*1.0) control_avg_spend_l4w
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) target_avg_spend_l8w
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END))*1.0) control_avg_spend_l8w
      FROM 
      loyalty_bi_analytics.fact_campaign_sales_solus fcs 
      JOIN PARAM p ON fcs.Campaign_Name =p.campaign_name 
      GROUP BY 1
      
      UNION ALL
      SELECT fcs.campaign_name,2 metric_sort_order, 'Target' Metric_Name, 2 column_sort_order, 'L4W' Column_Name, 
      ((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) /
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)  -1 )*100 L4W_Rep_Status, 
      ((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) /
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)-1)*100 L8W_Rep_Status,
      to_char((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0),'$ FM999,999,999,990D00') Column_Value 
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) -
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0) l4w_dollar_diff
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) -
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0) l8w_dollar_diff
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) target_avg_spend_l4w
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END))*1.0) control_avg_spend_l4w
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) target_avg_spend_l8w
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END))*1.0) control_avg_spend_l8w
      FROM
      loyalty_bi_analytics.fact_campaign_sales_solus fcs 
      JOIN PARAM p ON fcs.Campaign_Name =p.campaign_name 
      GROUP BY 1
      
      UNION ALL
      SELECT fcs.campaign_name,3 metric_sort_order, ' ' Metric_Name, 2 column_sort_order,  'L4W' Column_Name, 
      ((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) /
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)  -1 )*100  L4W_Rep_Status, 
      ((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) /
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)-1)*100 L8W_Rep_Status,
      to_char(((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) /
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)  -1 )*100,'FM999,999,999,990D00')||' %%'
      Column_Value 
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) -
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0) l4w_dollar_diff
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) -
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0) l8w_dollar_diff
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) target_avg_spend_l4w
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END))*1.0) control_avg_spend_l4w
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) target_avg_spend_l8w
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END))*1.0) control_avg_spend_l8w
      FROM
      loyalty_bi_analytics.fact_campaign_sales_solus fcs 
      JOIN PARAM p ON fcs.Campaign_Name =p.campaign_name 
      GROUP BY 1
      
      UNION ALL
      SELECT fcs.campaign_name,1 metric_sort_order, 'Control' Metric_Name,3 column_sort_order,  'L8W' Column_Name, 
      ((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) /
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)  -1 )*100  L4W_Rep_Status,
      ((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) /
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)-1)*100 L8W_Rep_Status,
      to_char((sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0),'$ FM999,999,999,990D00')  Column_Value
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) -
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0) l4w_dollar_diff
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) -
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0) l8w_dollar_diff
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) target_avg_spend_l4w
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END))*1.0) control_avg_spend_l4w
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) target_avg_spend_l8w
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END))*1.0) control_avg_spend_l8w
      FROM 
      loyalty_bi_analytics.fact_campaign_sales_solus fcs 
      JOIN PARAM p ON fcs.Campaign_Name =p.campaign_name 
      GROUP BY 1
      
      UNION ALL
      SELECT fcs.campaign_name,2 metric_sort_order, 'Target' Metric_Name, 3 column_sort_order, 'L8W' Column_Name, 
      ((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) /
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)  -1 )*100  L4W_Rep_Status,
      ((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) /
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)-1)*100  L8W_Rep_Status,
      to_char((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0),'$ FM999,999,999,990D00') Column_Value 
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) -
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0) l4w_dollar_diff
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) -
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0) l8w_dollar_diff
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) target_avg_spend_l4w
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END))*1.0) control_avg_spend_l4w
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) target_avg_spend_l8w
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END))*1.0) control_avg_spend_l8w
      FROM
      loyalty_bi_analytics.fact_campaign_sales_solus fcs 
      JOIN PARAM p ON fcs.Campaign_Name =p.campaign_name 
      GROUP BY 1
      
      UNION ALL
      SELECT fcs.campaign_name,3 metric_sort_order, ' ' Metric_Name,3 column_sort_order,  'L8W' Column_Name, 
      ((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) /
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)  -1 )*100  L4W_Rep_Status,
      ((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) /
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)-1)*100  L8W_Rep_Status,
      to_char(((sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) /
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0)-1)*100,'FM999,999,999,990D00')||' %%' Column_Value 
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) -
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0) l4w_dollar_diff
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) -
      (sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/NULLIF(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END),0)*1.0) l8w_dollar_diff
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) target_avg_spend_l4w
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l4w*1.00000 else 0 END)/4/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END))*1.0) control_avg_spend_l4w
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='T' THEN fcs.CRN END))*1.0) target_avg_spend_l8w
      ,(sum( CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.tot_amt_excld_gst_l8w*1.00000 else 0 END)/8/(Count(DISTINCT CASE WHEN fcs.Campaign_Audience_Type='C' THEN fcs.CRN END))*1.0) control_avg_spend_l8w
      FROM
      loyalty_bi_analytics.fact_campaign_sales_solus fcs 
      JOIN PARAM p ON fcs.Campaign_Name =p.campaign_name 
      GROUP BY 1
  )
  SELECT 
      p.period_description
    , rs.campaign_name
    , rs.metric_sort_order
    , rs.metric_name
    , rs.column_sort_order
    , rs.column_name
    , CASE 
      --WHEN (greatest(abs(rs.l4w_rep_status),abs(rs.l8w_rep_status)) > 2 OR greatest(abs(l4w_dollar_diff),abs(l8w_dollar_diff)) > 1) then 1
      WHEN greatest(abs(l4w_dollar_diff),abs(l8w_dollar_diff)) > .15 then 
      CASE
      WHEN (target_avg_spend_l4w <=100 AND control_avg_spend_l4w <=100 AND target_avg_spend_l8w <=100 AND control_avg_spend_l8w <=100) AND greatest(abs(rs.l4w_rep_status),abs(rs.l8w_rep_status)) > 2 then 1
      WHEN (target_avg_spend_l4w >100 AND control_avg_spend_l4w >100 AND target_avg_spend_l8w >100 AND control_avg_spend_l8w >100) AND greatest(abs(l4w_dollar_diff),abs(l8w_dollar_diff)) > 1 then 1
      ELSE 0
      END
      --WHEN greatest(abs(rs.l4w_rep_status),abs(rs.l8w_rep_status)) between 2 and 5 then 1
      else 0
      END as Representative_Status
      , rs.column_value 
      FROM Result rs 
      CROSS JOIN 
      PARAM p

cdabcc.sql.intfrn01:

  /*Removed existing records*/
  DELETE FROM loyalty_bi_analytics.fact_Campaign_Inteference
  WHERE campaign_name = 
  (
      SELECT DISTINCT campaign_name || ' ' || period_description AS campaign_name
      FROM loyalty_bi_analytics.dim_campaign
      --WHERE campaign_code = 'OSP-0005' AND campaign_start_date = '2016-12-16 00:00:00'
      WHERE campaign_code = %s AND campaign_start_date = %s
  )

cdabcc.sql.intfrn02:

  INSERT INTO loyalty_bi_analytics.fact_Campaign_Inteference
  
  /*** For Create replace above insert with below Create statement ***/
  --  Create Table loyalty_bi_analytics.fact_Campaign_Inteference
  --  DISTKEY (1)
  --AS 
  With 
  PARAM AS
  (
      SELECT DISTINCT campaign_name || ' ' || period_description AS campaign_name
      , period_description
      , campaign_code
      , campaign_start_date
      , campaign_start_date + campaign_duration_weeks * 7 - 1 AS campaign_end_date
      --, post_campaign_weeks AS weeks_fwd
      --, 2                   AS weeks_back
      , 0 AS weeks_fwd
      , 0                   AS weeks_back      
      FROM loyalty_bi_analytics.dim_campaign
      --WHERE campaign_code = 'OSP-0005' AND campaign_start_date = '2016-12-16 00:00:00'
      WHERE campaign_code = %s AND campaign_start_date = %s
  )
  
  , cusgroup AS
  (
  SELECT DISTINCT crn::varchar
  , CASE WHEN fcs.campaign_audience_type = 'T' THEN 'Target' else 'Control' END AS type
  FROM   loyalty_bi_analytics.fact_campaign_sales_solus fcs
  INNER JOIN PARAM
  ON     fcs.campaign_name = PARAM.campaign_name
  AND    fcs.campaign_start_date = PARAM.campaign_start_date
  )
  
  
  SELECT 
  PARAM.campaign_name
  , PARAM.period_description
  , c.campaign_code + ' - ' + c.campaign_name AS interfere_campaign_name
  , tco.offer_exec_start_date
  , tco.offer_exec_end_date
  
  , count(DISTINCT decode(type,'Target',cusgroup.crn))                    AS target_count
  , (SELECT count(DISTINCT crn) FROM cusgroup WHERE type = 'Target')      AS target_total_count
  , round(count(DISTINCT decode(type,'Target',cusgroup.crn))*1.0/(SELECT count(DISTINCT crn) FROM cusgroup WHERE type = 'Target'),4) AS target_percentage
  
  , count(DISTINCT decode(type,'Control',cusgroup.crn))                   AS control_count
  , (SELECT count(DISTINCT crn) FROM cusgroup WHERE type = 'Control')     AS control_total_count
  , round(count(DISTINCT decode(type,'Control',cusgroup.crn))*1.0/NULLIF((SELECT count(DISTINCT crn) FROM cusgroup WHERE type = 'Control'),0),4) AS control_percentage
  
  , 
  (count(DISTINCT decode(type,'Target',cusgroup.crn))*100.0/(SELECT count(DISTINCT crn) FROM cusgroup WHERE type = 'Target')) / 
  NULLIF((count(DISTINCT decode(type,'Control',cusgroup.crn))*100.0/NULLIF((SELECT count(DISTINCT crn) FROM cusgroup WHERE type = 'Control'),0)),0) - 1 AS percentage_diff
  
  , CASE WHEN tco.offer_exec_start_date < PARAM.campaign_start_date THEN 'X' Else '' END AS pre_promo
  , CASE WHEN (tco.offer_exec_start_date <= PARAM.campaign_end_date) AND (tco.offer_exec_end_date >= PARAM.campaign_start_date) THEN 'X' Else '' END AS promo
  , CASE WHEN tco.offer_exec_end_date > PARAM.campaign_end_date THEN 'X' Else '' END AS post_promo
  
  , ROW_NUMBER () OVER (ORDER BY tco.offer_exec_start_date) as order_by
  
  
  
  FROM   loyalty.et_resp_sendlog tco
  INNER JOIN cusgroup
  ON tco.crn = cusgroup.crn
  
  LEFT OUTER JOIN et_campaign c
  ON upper(tco.campaign_code) = upper(c.campaign_code)
  
  CROSS
  JOIN   PARAM
  WHERE  
  (
  tco.offer_exec_start_date    BETWEEN PARAM.campaign_start_date - (7 * PARAM.weeks_back) 
                          AND     PARAM.campaign_end_date + (7 * PARAM.weeks_fwd)
  OR
  tco.offer_exec_end_date      BETWEEN PARAM.campaign_start_date - (7 * PARAM.weeks_back) 
                          AND     PARAM.campaign_end_date + (7 * PARAM.weeks_fwd)
  )
                
  AND    upper(c.campaign_code) <> upper(PARAM.campaign_code)
  GROUP BY   PARAM.campaign_name
  , PARAM.period_description
  , c.campaign_code, c.campaign_name, tco.offer_exec_start_date, tco.offer_exec_end_date, PARAM.campaign_start_date, PARAM.campaign_end_date
  
  
  UNION 
  
  SELECT 
  PARAM.campaign_name
  , PARAM.period_description
  , 'All Interfering Campaigns' AS interfere_campaign_name
  , null as offer_exec_start_date
  , null as offer_exec_end_date
  
  , count(DISTINCT decode(type,'Target',cusgroup.crn))                    AS target_count
  , (SELECT count(DISTINCT crn) FROM cusgroup WHERE type = 'Target')      AS target_total_count
  , round(count(DISTINCT decode(type,'Target',cusgroup.crn))*1.0/(SELECT count(DISTINCT crn) FROM cusgroup WHERE type = 'Target'),4) AS target_percentage
  
  , count(DISTINCT decode(type,'Control',cusgroup.crn))                   AS control_count
  , (SELECT count(DISTINCT crn) FROM cusgroup WHERE type = 'Control')     AS control_total_count
  , round(count(DISTINCT decode(type,'Control',cusgroup.crn))*1.0/NULLIF((SELECT count(DISTINCT crn) FROM cusgroup WHERE type = 'Control'),0),4) AS control_percentage
  
  , 
  (count(DISTINCT decode(type,'Target',cusgroup.crn))*100.0/(SELECT count(DISTINCT crn) FROM cusgroup WHERE type = 'Target')) / 
  NULLIF((count(DISTINCT decode(type,'Control',cusgroup.crn))*100.0/NULLIF((SELECT count(DISTINCT crn) FROM cusgroup WHERE type = 'Control'),0)),0) - 1 AS percentage_diff
  
  , null AS pre_promo
  , null AS promo
  , null AS post_promo
  
  , 1000 order_by
  
  
  
  FROM   loyalty.et_resp_sendlog tco
  INNER JOIN cusgroup
  ON tco.crn = cusgroup.crn
  
  LEFT OUTER JOIN et_campaign c
  ON upper(tco.campaign_code) = upper(c.campaign_code)
  
  CROSS
  JOIN   PARAM
  WHERE  
  (
  tco.offer_exec_start_date    BETWEEN PARAM.campaign_start_date - (7 * PARAM.weeks_back) 
                          AND     PARAM.campaign_end_date + (7 * PARAM.weeks_fwd)
  OR
  tco.offer_exec_end_date      BETWEEN PARAM.campaign_start_date - (7 * PARAM.weeks_back) 
                          AND     PARAM.campaign_end_date + (7 * PARAM.weeks_fwd)
  )
                
  AND    upper(c.campaign_code) <> upper(PARAM.campaign_code)
  GROUP BY   PARAM.campaign_name
  , PARAM.period_description